#!/bin/bash

function createManager() {
  infoln "Enrolling the CA admin"
  mkdir -p organizations/peerOrganizations/manager.beefsupply.com/

  export FABRIC_CA_CLIENT_HOME=${PWD}/organizations/peerOrganizations/manager.beefsupply.com/

  set -x
  fabric-ca-client enroll -u https://admin:adminpw@localhost:7054 --caname ca-manager --tls.certfiles "${PWD}/organizations/fabric-ca/manager/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo 'NodeOUs:
  Enable: true
  ClientOUIdentifier:
    Certificate: cacerts/localhost-7054-ca-manager.pem
    OrganizationalUnitIdentifier: client
  PeerOUIdentifier:
    Certificate: cacerts/localhost-7054-ca-manager.pem
    OrganizationalUnitIdentifier: peer
  AdminOUIdentifier:
    Certificate: cacerts/localhost-7054-ca-manager.pem
    OrganizationalUnitIdentifier: admin
  OrdererOUIdentifier:
    Certificate: cacerts/localhost-7054-ca-manager.pem
    OrganizationalUnitIdentifier: orderer' > "${PWD}/organizations/peerOrganizations/manager.beefsupply.com/msp/config.yaml"

  # Since the CA serves as both the organization CA and TLS CA, copy the org's root cert that was generated by CA startup into the org level ca and tlsca directories

  # Copy manager's CA cert to manager's /msp/tlscacerts directory (for use in the channel MSP definition)
  mkdir -p "${PWD}/organizations/peerOrganizations/manager.beefsupply.com/msp/tlscacerts"
  cp "${PWD}/organizations/fabric-ca/manager/ca-cert.pem" "${PWD}/organizations/peerOrganizations/manager.beefsupply.com/msp/tlscacerts/ca.crt"

  # Copy manager's CA cert to manager's /tlsca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/manager.beefsupply.com/tlsca"
  cp "${PWD}/organizations/fabric-ca/manager/ca-cert.pem" "${PWD}/organizations/peerOrganizations/manager.beefsupply.com/tlsca/tlsca.manager.beefsupply.com-cert.pem"

  # Copy manager's CA cert to manager's /ca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/manager.beefsupply.com/ca"
  cp "${PWD}/organizations/fabric-ca/manager/ca-cert.pem" "${PWD}/organizations/peerOrganizations/manager.beefsupply.com/ca/ca.manager.beefsupply.com-cert.pem"

  infoln "Registering peer0"
  set -x
  fabric-ca-client register --caname ca-manager --id.name peer0 --id.secret peer0pw --id.type peer --tls.certfiles "${PWD}/organizations/fabric-ca/manager/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Registering user"
  set -x
  fabric-ca-client register --caname ca-manager --id.name user1 --id.secret user1pw --id.type client --tls.certfiles "${PWD}/organizations/fabric-ca/manager/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Registering the org admin"
  set -x
  fabric-ca-client register --caname ca-manager --id.name manageradmin --id.secret manageradminpw --id.type admin --tls.certfiles "${PWD}/organizations/fabric-ca/manager/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Generating the peer0 msp"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:7054 --caname ca-manager -M "${PWD}/organizations/peerOrganizations/manager.beefsupply.com/peers/peer0.manager.beefsupply.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/manager/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/manager.beefsupply.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/manager.beefsupply.com/peers/peer0.manager.beefsupply.com/msp/config.yaml"

  infoln "Generating the peer0-tls certificates, use --csr.hosts to specify Subject Alternative Names"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:7054 --caname ca-manager -M "${PWD}/organizations/peerOrganizations/manager.beefsupply.com/peers/peer0.manager.beefsupply.com/tls" --enrollment.profile tls --csr.hosts peer0.manager.beefsupply.com --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/manager/ca-cert.pem"
  { set +x; } 2>/dev/null

  # Copy the tls CA cert, server cert, server keystore to well known file names in the peer's tls directory that are referenced by peer startup config
  cp "${PWD}/organizations/peerOrganizations/manager.beefsupply.com/peers/peer0.manager.beefsupply.com/tls/tlscacerts/"* "${PWD}/organizations/peerOrganizations/manager.beefsupply.com/peers/peer0.manager.beefsupply.com/tls/ca.crt"
  cp "${PWD}/organizations/peerOrganizations/manager.beefsupply.com/peers/peer0.manager.beefsupply.com/tls/signcerts/"* "${PWD}/organizations/peerOrganizations/manager.beefsupply.com/peers/peer0.manager.beefsupply.com/tls/server.crt"
  cp "${PWD}/organizations/peerOrganizations/manager.beefsupply.com/peers/peer0.manager.beefsupply.com/tls/keystore/"* "${PWD}/organizations/peerOrganizations/manager.beefsupply.com/peers/peer0.manager.beefsupply.com/tls/server.key"

  infoln "Generating the user msp"
  set -x
  fabric-ca-client enroll -u https://user1:user1pw@localhost:7054 --caname ca-manager -M "${PWD}/organizations/peerOrganizations/manager.beefsupply.com/users/User1@manager.beefsupply.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/manager/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/manager.beefsupply.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/manager.beefsupply.com/users/User1@manager.beefsupply.com/msp/config.yaml"

  infoln "Generating the org admin msp"
  set -x
  fabric-ca-client enroll -u https://manageradmin:manageradminpw@localhost:7054 --caname ca-manager -M "${PWD}/organizations/peerOrganizations/manager.beefsupply.com/users/Admin@manager.beefsupply.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/manager/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/manager.beefsupply.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/manager.beefsupply.com/users/Admin@manager.beefsupply.com/msp/config.yaml"
}




function createRegulator() {
  infoln "Enrolling the CA admin"
  mkdir -p organizations/peerOrganizations/regulator.beefsupply.com/

  export FABRIC_CA_CLIENT_HOME=${PWD}/organizations/peerOrganizations/regulator.beefsupply.com/

  set -x
  fabric-ca-client enroll -u https://admin:adminpw@localhost:8054 --caname ca-regulator --tls.certfiles "${PWD}/organizations/fabric-ca/regulator/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo 'NodeOUs:
  Enable: true
  ClientOUIdentifier:
    Certificate: cacerts/localhost-8054-ca-regulator.pem
    OrganizationalUnitIdentifier: client
  PeerOUIdentifier:
    Certificate: cacerts/localhost-8054-ca-regulator.pem
    OrganizationalUnitIdentifier: peer
  AdminOUIdentifier:
    Certificate: cacerts/localhost-8054-ca-regulator.pem
    OrganizationalUnitIdentifier: admin
  OrdererOUIdentifier:
    Certificate: cacerts/localhost-8054-ca-regulator.pem
    OrganizationalUnitIdentifier: orderer' > "${PWD}/organizations/peerOrganizations/regulator.beefsupply.com/msp/config.yaml"

  # Since the CA serves as both the organization CA and TLS CA, copy the org's root cert that was generated by CA startup into the org level ca and tlsca directories

  # Copy regulator's CA cert to regulator's /msp/tlscacerts directory (for use in the channel MSP definition)
  mkdir -p "${PWD}/organizations/peerOrganizations/regulator.beefsupply.com/msp/tlscacerts"
  cp "${PWD}/organizations/fabric-ca/regulator/ca-cert.pem" "${PWD}/organizations/peerOrganizations/regulator.beefsupply.com/msp/tlscacerts/ca.crt"

  # Copy regulator's CA cert to regulator's /tlsca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/regulator.beefsupply.com/tlsca"
  cp "${PWD}/organizations/fabric-ca/regulator/ca-cert.pem" "${PWD}/organizations/peerOrganizations/regulator.beefsupply.com/tlsca/tlsca.regulator.beefsupply.com-cert.pem"

  # Copy regulator's CA cert to regulator's /ca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/regulator.beefsupply.com/ca"
  cp "${PWD}/organizations/fabric-ca/regulator/ca-cert.pem" "${PWD}/organizations/peerOrganizations/regulator.beefsupply.com/ca/ca.regulator.beefsupply.com-cert.pem"

  infoln "Registering peer0"
  set -x
  fabric-ca-client register --caname ca-regulator --id.name peer0 --id.secret peer0pw --id.type peer --tls.certfiles "${PWD}/organizations/fabric-ca/regulator/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Registering user"
  set -x
  fabric-ca-client register --caname ca-regulator --id.name user1 --id.secret user1pw --id.type client --tls.certfiles "${PWD}/organizations/fabric-ca/regulator/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Registering the org admin"
  set -x
  fabric-ca-client register --caname ca-regulator --id.name regulatoradmin --id.secret regulatoradminpw --id.type admin --tls.certfiles "${PWD}/organizations/fabric-ca/regulator/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Generating the peer0 msp"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:8054 --caname ca-regulator -M "${PWD}/organizations/peerOrganizations/regulator.beefsupply.com/peers/peer0.regulator.beefsupply.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/regulator/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/regulator.beefsupply.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/regulator.beefsupply.com/peers/peer0.regulator.beefsupply.com/msp/config.yaml"

  infoln "Generating the peer0-tls certificates, use --csr.hosts to specify Subject Alternative Names"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:8054 --caname ca-regulator -M "${PWD}/organizations/peerOrganizations/regulator.beefsupply.com/peers/peer0.regulator.beefsupply.com/tls" --enrollment.profile tls --csr.hosts peer0.regulator.beefsupply.com --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/regulator/ca-cert.pem"
  { set +x; } 2>/dev/null

  # Copy the tls CA cert, server cert, server keystore to well known file names in the peer's tls directory that are referenced by peer startup config
  cp "${PWD}/organizations/peerOrganizations/regulator.beefsupply.com/peers/peer0.regulator.beefsupply.com/tls/tlscacerts/"* "${PWD}/organizations/peerOrganizations/regulator.beefsupply.com/peers/peer0.regulator.beefsupply.com/tls/ca.crt"
  cp "${PWD}/organizations/peerOrganizations/regulator.beefsupply.com/peers/peer0.regulator.beefsupply.com/tls/signcerts/"* "${PWD}/organizations/peerOrganizations/regulator.beefsupply.com/peers/peer0.regulator.beefsupply.com/tls/server.crt"
  cp "${PWD}/organizations/peerOrganizations/regulator.beefsupply.com/peers/peer0.regulator.beefsupply.com/tls/keystore/"* "${PWD}/organizations/peerOrganizations/regulator.beefsupply.com/peers/peer0.regulator.beefsupply.com/tls/server.key"

  infoln "Generating the user msp"
  set -x
  fabric-ca-client enroll -u https://user1:user1pw@localhost:8054 --caname ca-regulator -M "${PWD}/organizations/peerOrganizations/regulator.beefsupply.com/users/User1@regulator.beefsupply.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/regulator/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/regulator.beefsupply.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/regulator.beefsupply.com/users/User1@regulator.beefsupply.com/msp/config.yaml"

  infoln "Generating the org admin msp"
  set -x
  fabric-ca-client enroll -u https://regulatoradmin:regulatoradminpw@localhost:8054 --caname ca-regulator -M "${PWD}/organizations/peerOrganizations/regulator.beefsupply.com/users/Admin@regulator.beefsupply.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/regulator/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/regulator.beefsupply.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/regulator.beefsupply.com/users/Admin@regulator.beefsupply.com/msp/config.yaml"
}

function createOrderer() {
  infoln "Enrolling the CA admin"
  mkdir -p organizations/ordererOrganizations/beefsupply.com

  export FABRIC_CA_CLIENT_HOME=${PWD}/organizations/ordererOrganizations/beefsupply.com

  set -x
  fabric-ca-client enroll -u https://admin:adminpw@localhost:9054 --caname ca-orderer --tls.certfiles "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo 'NodeOUs:
  Enable: true
  ClientOUIdentifier:
    Certificate: cacerts/localhost-9054-ca-orderer.pem
    OrganizationalUnitIdentifier: client
  PeerOUIdentifier:
    Certificate: cacerts/localhost-9054-ca-orderer.pem
    OrganizationalUnitIdentifier: peer
  AdminOUIdentifier:
    Certificate: cacerts/localhost-9054-ca-orderer.pem
    OrganizationalUnitIdentifier: admin
  OrdererOUIdentifier:
    Certificate: cacerts/localhost-9054-ca-orderer.pem
    OrganizationalUnitIdentifier: orderer' > "${PWD}/organizations/ordererOrganizations/beefsupply.com/msp/config.yaml"

  # Since the CA serves as both the organization CA and TLS CA, copy the org's root cert that was generated by CA startup into the org level ca and tlsca directories

  # Copy orderer org's CA cert to orderer org's /msp/tlscacerts directory (for use in the channel MSP definition)
  mkdir -p "${PWD}/organizations/ordererOrganizations/beefsupply.com/msp/tlscacerts"
  cp "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem" "${PWD}/organizations/ordererOrganizations/beefsupply.com/msp/tlscacerts/tlsca.beefsupply.com-cert.pem"

  # Copy orderer org's CA cert to orderer org's /tlsca directory (for use by clients)
  mkdir -p "${PWD}/organizations/ordererOrganizations/beefsupply.com/tlsca"
  cp "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem" "${PWD}/organizations/ordererOrganizations/beefsupply.com/tlsca/tlsca.beefsupply.com-cert.pem"

  infoln "Registering orderer"
  set -x
  fabric-ca-client register --caname ca-orderer --id.name orderer --id.secret ordererpw --id.type orderer --tls.certfiles "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Registering the orderer admin"
  set -x
  fabric-ca-client register --caname ca-orderer --id.name ordererAdmin --id.secret ordererAdminpw --id.type admin --tls.certfiles "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Generating the orderer msp"
  set -x
  fabric-ca-client enroll -u https://orderer:ordererpw@localhost:9054 --caname ca-orderer -M "${PWD}/organizations/ordererOrganizations/beefsupply.com/orderers/orderer.beefsupply.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/ordererOrganizations/beefsupply.com/msp/config.yaml" "${PWD}/organizations/ordererOrganizations/beefsupply.com/orderers/orderer.beefsupply.com/msp/config.yaml"

  infoln "Generating the orderer-tls certificates, use --csr.hosts to specify Subject Alternative Names"
  set -x
  fabric-ca-client enroll -u https://orderer:ordererpw@localhost:9054 --caname ca-orderer -M "${PWD}/organizations/ordererOrganizations/beefsupply.com/orderers/orderer.beefsupply.com/tls" --enrollment.profile tls --csr.hosts orderer.beefsupply.com --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem"
  { set +x; } 2>/dev/null

  # Copy the tls CA cert, server cert, server keystore to well known file names in the orderer's tls directory that are referenced by orderer startup config
  cp "${PWD}/organizations/ordererOrganizations/beefsupply.com/orderers/orderer.beefsupply.com/tls/tlscacerts/"* "${PWD}/organizations/ordererOrganizations/beefsupply.com/orderers/orderer.beefsupply.com/tls/ca.crt"
  cp "${PWD}/organizations/ordererOrganizations/beefsupply.com/orderers/orderer.beefsupply.com/tls/signcerts/"* "${PWD}/organizations/ordererOrganizations/beefsupply.com/orderers/orderer.beefsupply.com/tls/server.crt"
  cp "${PWD}/organizations/ordererOrganizations/beefsupply.com/orderers/orderer.beefsupply.com/tls/keystore/"* "${PWD}/organizations/ordererOrganizations/beefsupply.com/orderers/orderer.beefsupply.com/tls/server.key"

  # Copy orderer org's CA cert to orderer's /msp/tlscacerts directory (for use in the orderer MSP definition)
  mkdir -p "${PWD}/organizations/ordererOrganizations/beefsupply.com/orderers/orderer.beefsupply.com/msp/tlscacerts"
  cp "${PWD}/organizations/ordererOrganizations/beefsupply.com/orderers/orderer.beefsupply.com/tls/tlscacerts/"* "${PWD}/organizations/ordererOrganizations/beefsupply.com/orderers/orderer.beefsupply.com/msp/tlscacerts/tlsca.beefsupply.com-cert.pem"

  infoln "Generating the admin msp"
  set -x
  fabric-ca-client enroll -u https://ordererAdmin:ordererAdminpw@localhost:9054 --caname ca-orderer -M "${PWD}/organizations/ordererOrganizations/beefsupply.com/users/Admin@beefsupply.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/ordererOrganizations/beefsupply.com/msp/config.yaml" "${PWD}/organizations/ordererOrganizations/beefsupply.com/users/Admin@beefsupply.com/msp/config.yaml"
}


function createFarmer() { 
  infoln "Enrolling the CA admin"
  mkdir -p organizations/peerOrganizations/farmer.beefsupply.com/

  export FABRIC_CA_CLIENT_HOME=${PWD}/organizations/peerOrganizations/farmer.beefsupply.com/

  set -x
  fabric-ca-client enroll -u https://admin:adminpw@localhost:9054 --caname ca-farmer --tls.certfiles "${PWD}/organizations/fabric-ca/farmer/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo 'NodeOUs:
  Enable: true
  ClientOUIdentifier:
    Certificate: cacerts/localhost-9054-ca-farmer.pem
    OrganizationalUnitIdentifier: client
  PeerOUIdentifier:
    Certificate: cacerts/localhost-9054-ca-farmer.pem
    OrganizationalUnitIdentifier: peer
  AdminOUIdentifier:
    Certificate: cacerts/localhost-9054-ca-farmer.pem
    OrganizationalUnitIdentifier: admin
  OrdererOUIdentifier:
    Certificate: cacerts/localhost-9054-ca-farmer.pem
    OrganizationalUnitIdentifier: orderer' > "${PWD}/organizations/peerOrganizations/farmer.beefsupply.com/msp/config.yaml"


  mkdir -p "${PWD}/organizations/peerOrganizations/farmer.beefsupply.com/msp/tlscacerts"
  cp "${PWD}/organizations/fabric-ca/farmer/ca-cert.pem" "${PWD}/organizations/peerOrganizations/farmer.beefsupply.com/msp/tlscacerts/ca.crt"

 
  mkdir -p "${PWD}/organizations/peerOrganizations/farmer.beefsupply.com/tlsca"
  cp "${PWD}/organizations/fabric-ca/farmer/ca-cert.pem" "${PWD}/organizations/peerOrganizations/farmer.beefsupply.com/tlsca/tlsca.farmer.beefsupply.com-cert.pem"

  
  mkdir -p "${PWD}/organizations/peerOrganizations/farmer.beefsupply.com/ca"
  cp "${PWD}/organizations/fabric-ca/farmer/ca-cert.pem" "${PWD}/organizations/peerOrganizations/farmer.beefsupply.com/ca/ca.farmer.beefsupply.com-cert.pem"

  infoln "Registering peer0"
  set -x
  fabric-ca-client register --caname ca-farmer --id.name peer0 --id.secret peer0pw --id.type peer --tls.certfiles "${PWD}/organizations/fabric-ca/farmer/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Registering user"
  set -x
  fabric-ca-client register --caname ca-farmer --id.name user1 --id.secret user1pw --id.type client --tls.certfiles "${PWD}/organizations/fabric-ca/farmer/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Registering the org admin"
  set -x
  fabric-ca-client register --caname ca-farmer --id.name farmeradmin --id.secret farmeradminpw --id.type admin --tls.certfiles "${PWD}/organizations/fabric-ca/farmer/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Generating the peer0 msp"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:9054 --caname ca-farmer -M "${PWD}/organizations/peerOrganizations/farmer.beefsupply.com/peers/peer0.farmer.beefsupply.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/farmer/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/farmer.beefsupply.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/farmer.beefsupply.com/peers/peer0.farmer.beefsupply.com/msp/config.yaml"

  infoln "Generating the peer0-tls certificates, use --csr.hosts to specify Subject Alternative Names"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:9054 --caname ca-farmer -M "${PWD}/organizations/peerOrganizations/farmer.beefsupply.com/peers/peer0.farmer.beefsupply.com/tls" --enrollment.profile tls --csr.hosts peer0.farmer.beefsupply.com --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/farmer/ca-cert.pem"
  { set +x; } 2>/dev/null

  # Copy the tls CA cert, server cert, server keystore to well known file names in the peer's tls directory that are referenced by peer startup config
  cp "${PWD}/organizations/peerOrganizations/farmer.beefsupply.com/peers/peer0.farmer.beefsupply.com/tls/tlscacerts/"* "${PWD}/organizations/peerOrganizations/farmer.beefsupply.com/peers/peer0.farmer.beefsupply.com/tls/ca.crt"
  cp "${PWD}/organizations/peerOrganizations/farmer.beefsupply.com/peers/peer0.farmer.beefsupply.com/tls/signcerts/"* "${PWD}/organizations/peerOrganizations/farmer.beefsupply.com/peers/peer0.farmer.beefsupply.com/tls/server.crt"
  cp "${PWD}/organizations/peerOrganizations/farmer.beefsupply.com/peers/peer0.farmer.beefsupply.com/tls/keystore/"* "${PWD}/organizations/peerOrganizations/farmer.beefsupply.com/peers/peer0.farmer.beefsupply.com/tls/server.key"

  infoln "Generating the user msp"
  set -x
  fabric-ca-client enroll -u https://user1:user1pw@localhost:9054 --caname ca-farmer -M "${PWD}/organizations/peerOrganizations/farmer.beefsupply.com/users/User1@farmer.beefsupply.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/farmer/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/farmer.beefsupply.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/farmer.beefsupply.com/users/User1@farmer.beefsupply.com/msp/config.yaml"

  infoln "Generating the org admin msp"
  set -x
  fabric-ca-client enroll -u https://farmeradmin:farmeradminpw@localhost:9054 --caname ca-farmer -M "${PWD}/organizations/peerOrganizations/farmer.beefsupply.com/users/Admin@farmer.beefsupply.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/farmer/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/farmer.beefsupply.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/farmer.beefsupply.com/users/Admin@farmer.beefsupply.com/msp/config.yaml"
}

function createFarmer() {
  infoln "Enrolling the CA admin"
  mkdir -p organizations/peerOrganizations/farmer.beefsupply.com/

  export FABRIC_CA_CLIENT_HOME=${PWD}/organizations/peerOrganizations/farmer.beefsupply.com/

  set -x
  fabric-ca-client enroll -u https://admin:adminpw@localhost:9054 --caname ca-farmer --tls.certfiles "${PWD}/organizations/fabric-ca/farmer/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo 'NodeOUs:
  Enable: true
  ClientOUIdentifier:
    Certificate: cacerts/localhost-9054-ca-farmer.pem
    OrganizationalUnitIdentifier: client
  PeerOUIdentifier:
    Certificate: cacerts/localhost-9054-ca-farmer.pem
    OrganizationalUnitIdentifier: peer
  AdminOUIdentifier:
    Certificate: cacerts/localhost-9054-ca-farmer.pem
    OrganizationalUnitIdentifier: admin
  OrdererOUIdentifier:
    Certificate: cacerts/localhost-9054-ca-farmer.pem
    OrganizationalUnitIdentifier: orderer' > "${PWD}/organizations/peerOrganizations/farmer.beefsupply.com/msp/config.yaml"


  mkdir -p "${PWD}/organizations/peerOrganizations/farmer.beefsupply.com/msp/tlscacerts"
  cp "${PWD}/organizations/fabric-ca/farmer/ca-cert.pem" "${PWD}/organizations/peerOrganizations/farmer.beefsupply.com/msp/tlscacerts/ca.crt"

 
  mkdir -p "${PWD}/organizations/peerOrganizations/farmer.beefsupply.com/tlsca"
  cp "${PWD}/organizations/fabric-ca/farmer/ca-cert.pem" "${PWD}/organizations/peerOrganizations/farmer.beefsupply.com/tlsca/tlsca.farmer.beefsupply.com-cert.pem"

  
  mkdir -p "${PWD}/organizations/peerOrganizations/farmer.beefsupply.com/ca"
  cp "${PWD}/organizations/fabric-ca/farmer/ca-cert.pem" "${PWD}/organizations/peerOrganizations/farmer.beefsupply.com/ca/ca.farmer.beefsupply.com-cert.pem"

  infoln "Registering peer0"
  set -x
  fabric-ca-client register --caname ca-farmer --id.name peer0 --id.secret peer0pw --id.type peer --tls.certfiles "${PWD}/organizations/fabric-ca/farmer/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Registering user"
  set -x
  fabric-ca-client register --caname ca-farmer --id.name user1 --id.secret user1pw --id.type client --tls.certfiles "${PWD}/organizations/fabric-ca/farmer/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Registering the org admin"
  set -x
  fabric-ca-client register --caname ca-farmer --id.name farmeradmin --id.secret farmeradminpw --id.type admin --tls.certfiles "${PWD}/organizations/fabric-ca/farmer/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Generating the peer0 msp"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:9054 --caname ca-farmer -M "${PWD}/organizations/peerOrganizations/farmer.beefsupply.com/peers/peer0.farmer.beefsupply.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/farmer/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/farmer.beefsupply.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/farmer.beefsupply.com/peers/peer0.farmer.beefsupply.com/msp/config.yaml"

  infoln "Generating the peer0-tls certificates, use --csr.hosts to specify Subject Alternative Names"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:9054 --caname ca-farmer -M "${PWD}/organizations/peerOrganizations/farmer.beefsupply.com/peers/peer0.farmer.beefsupply.com/tls" --enrollment.profile tls --csr.hosts peer0.farmer.beefsupply.com --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/farmer/ca-cert.pem"
  { set +x; } 2>/dev/null

  # Copy the tls CA cert, server cert, server keystore to well known file names in the peer's tls directory that are referenced by peer startup config
  cp "${PWD}/organizations/peerOrganizations/farmer.beefsupply.com/peers/peer0.farmer.beefsupply.com/tls/tlscacerts/"* "${PWD}/organizations/peerOrganizations/farmer.beefsupply.com/peers/peer0.farmer.beefsupply.com/tls/ca.crt"
  cp "${PWD}/organizations/peerOrganizations/farmer.beefsupply.com/peers/peer0.farmer.beefsupply.com/tls/signcerts/"* "${PWD}/organizations/peerOrganizations/farmer.beefsupply.com/peers/peer0.farmer.beefsupply.com/tls/server.crt"
  cp "${PWD}/organizations/peerOrganizations/farmer.beefsupply.com/peers/peer0.farmer.beefsupply.com/tls/keystore/"* "${PWD}/organizations/peerOrganizations/farmer.beefsupply.com/peers/peer0.farmer.beefsupply.com/tls/server.key"

  infoln "Generating the user msp"
  set -x
  fabric-ca-client enroll -u https://user1:user1pw@localhost:9054 --caname ca-farmer -M "${PWD}/organizations/peerOrganizations/farmer.beefsupply.com/users/User1@farmer.beefsupply.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/farmer/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/farmer.beefsupply.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/farmer.beefsupply.com/users/User1@farmer.beefsupply.com/msp/config.yaml"

  infoln "Generating the org admin msp"
  set -x
  fabric-ca-client enroll -u https://farmeradmin:farmeradminpw@localhost:9054 --caname ca-farmer -M "${PWD}/organizations/peerOrganizations/farmer.beefsupply.com/users/Admin@farmer.beefsupply.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/farmer/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/farmer.beefsupply.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/farmer.beefsupply.com/users/Admin@farmer.beefsupply.com/msp/config.yaml"
}


function createBreeder() {
  infoln "Enrolling the CA admin"
  mkdir -p organizations/peerOrganizations/breeder.beefsupply.com/

  export FABRIC_CA_CLIENT_HOME=${PWD}/organizations/peerOrganizations/breeder.beefsupply.com/

  set -x
  fabric-ca-client enroll -u https://admin:adminpw@localhost:10054 --caname ca-breeder --tls.certfiles "${PWD}/organizations/fabric-ca/breeder/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo 'NodeOUs:
  Enable: true
  ClientOUIdentifier:
    Certificate: cacerts/localhost-10054-ca-breeder.pem
    OrganizationalUnitIdentifier: client
  PeerOUIdentifier:
    Certificate: cacerts/localhost-10054-ca-breeder.pem
    OrganizationalUnitIdentifier: peer
  AdminOUIdentifier:
    Certificate: cacerts/localhost-10054-ca-breeder.pem
    OrganizationalUnitIdentifier: admin
  OrdererOUIdentifier:
    Certificate: cacerts/localhost-10054-ca-breeder.pem
    OrganizationalUnitIdentifier: orderer' > "${PWD}/organizations/peerOrganizations/breeder.beefsupply.com/msp/config.yaml"


  mkdir -p "${PWD}/organizations/peerOrganizations/breeder.beefsupply.com/msp/tlscacerts"
  cp "${PWD}/organizations/fabric-ca/breeder/ca-cert.pem" "${PWD}/organizations/peerOrganizations/breeder.beefsupply.com/msp/tlscacerts/ca.crt"

 
  mkdir -p "${PWD}/organizations/peerOrganizations/breeder.beefsupply.com/tlsca"
  cp "${PWD}/organizations/fabric-ca/breeder/ca-cert.pem" "${PWD}/organizations/peerOrganizations/breeder.beefsupply.com/tlsca/tlsca.breeder.beefsupply.com-cert.pem"

  
  mkdir -p "${PWD}/organizations/peerOrganizations/breeder.beefsupply.com/ca"
  cp "${PWD}/organizations/fabric-ca/breeder/ca-cert.pem" "${PWD}/organizations/peerOrganizations/breeder.beefsupply.com/ca/ca.breeder.beefsupply.com-cert.pem"

  infoln "Registering peer0"
  set -x
  fabric-ca-client register --caname ca-breeder --id.name peer0 --id.secret peer0pw --id.type peer --tls.certfiles "${PWD}/organizations/fabric-ca/breeder/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Registering user"
  set -x
  fabric-ca-client register --caname ca-breeder --id.name user1 --id.secret user1pw --id.type client --tls.certfiles "${PWD}/organizations/fabric-ca/breeder/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Registering the org admin"
  set -x
  fabric-ca-client register --caname ca-breeder --id.name breederadmin --id.secret breederadminpw --id.type admin --tls.certfiles "${PWD}/organizations/fabric-ca/breeder/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Generating the peer0 msp"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:10054 --caname ca-breeder -M "${PWD}/organizations/peerOrganizations/breeder.beefsupply.com/peers/peer0.breeder.beefsupply.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/breeder/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/breeder.beefsupply.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/breeder.beefsupply.com/peers/peer0.breeder.beefsupply.com/msp/config.yaml"

  infoln "Generating the peer0-tls certificates, use --csr.hosts to specify Subject Alternative Names"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:10054 --caname ca-breeder -M "${PWD}/organizations/peerOrganizations/breeder.beefsupply.com/peers/peer0.breeder.beefsupply.com/tls" --enrollment.profile tls --csr.hosts peer0.breeder.beefsupply.com --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/breeder/ca-cert.pem"
  { set +x; } 2>/dev/null

  # Copy the tls CA cert, server cert, server keystore to well known file names in the peer's tls directory that are referenced by peer startup config
  cp "${PWD}/organizations/peerOrganizations/breeder.beefsupply.com/peers/peer0.breeder.beefsupply.com/tls/tlscacerts/"* "${PWD}/organizations/peerOrganizations/breeder.beefsupply.com/peers/peer0.breeder.beefsupply.com/tls/ca.crt"
  cp "${PWD}/organizations/peerOrganizations/breeder.beefsupply.com/peers/peer0.breeder.beefsupply.com/tls/signcerts/"* "${PWD}/organizations/peerOrganizations/breeder.beefsupply.com/peers/peer0.breeder.beefsupply.com/tls/server.crt"
  cp "${PWD}/organizations/peerOrganizations/breeder.beefsupply.com/peers/peer0.breeder.beefsupply.com/tls/keystore/"* "${PWD}/organizations/peerOrganizations/breeder.beefsupply.com/peers/peer0.breeder.beefsupply.com/tls/server.key"

  infoln "Generating the user msp"
  set -x
  fabric-ca-client enroll -u https://user1:user1pw@localhost:10054 --caname ca-breeder -M "${PWD}/organizations/peerOrganizations/breeder.beefsupply.com/users/User1@breeder.beefsupply.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/breeder/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/breeder.beefsupply.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/breeder.beefsupply.com/users/User1@breeder.beefsupply.com/msp/config.yaml"

  infoln "Generating the org admin msp"
  set -x
  fabric-ca-client enroll -u https://breederadmin:breederadminpw@localhost:10054 --caname ca-breeder -M "${PWD}/organizations/peerOrganizations/breeder.beefsupply.com/users/Admin@breeder.beefsupply.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/breeder/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/breeder.beefsupply.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/breeder.beefsupply.com/users/Admin@breeder.beefsupply.com/msp/config.yaml"
}

function createBreeder1() {
  infoln "Enrolling the CA admin"
  mkdir -p organizations/peerOrganizations/breeder1.beefsupply.com/

  export FABRIC_CA_CLIENT_HOME=${PWD}/organizations/peerOrganizations/breeder1.beefsupply.com/

  set -x
  fabric-ca-client enroll -u https://admin:adminpw@localhost:13054 --caname ca-breeder1 --tls.certfiles "${PWD}/organizations/fabric-ca/breeder1/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo 'NodeOUs:
  Enable: true
  ClientOUIdentifier:
    Certificate: cacerts/localhost-13054-ca-breeder1.pem
    OrganizationalUnitIdentifier: client
  PeerOUIdentifier:
    Certificate: cacerts/localhost-13054-ca-breeder1.pem
    OrganizationalUnitIdentifier: peer
  AdminOUIdentifier:
    Certificate: cacerts/localhost-13054-ca-breeder1.pem
    OrganizationalUnitIdentifier: admin
  OrdererOUIdentifier:
    Certificate: cacerts/localhost-13054-ca-breeder1.pem
    OrganizationalUnitIdentifier: orderer' > "${PWD}/organizations/peerOrganizations/breeder1.beefsupply.com/msp/config.yaml"


  mkdir -p "${PWD}/organizations/peerOrganizations/breeder1.beefsupply.com/msp/tlscacerts"
  cp "${PWD}/organizations/fabric-ca/breeder1/ca-cert.pem" "${PWD}/organizations/peerOrganizations/breeder1.beefsupply.com/msp/tlscacerts/ca.crt"

 
  mkdir -p "${PWD}/organizations/peerOrganizations/breeder1.beefsupply.com/tlsca"
  cp "${PWD}/organizations/fabric-ca/breeder1/ca-cert.pem" "${PWD}/organizations/peerOrganizations/breeder1.beefsupply.com/tlsca/tlsca.breeder1.beefsupply.com-cert.pem"

  
  mkdir -p "${PWD}/organizations/peerOrganizations/breeder1.beefsupply.com/ca"
  cp "${PWD}/organizations/fabric-ca/breeder1/ca-cert.pem" "${PWD}/organizations/peerOrganizations/breeder1.beefsupply.com/ca/ca.breeder1.beefsupply.com-cert.pem"

  infoln "Registering peer0"
  set -x
  fabric-ca-client register --caname ca-breeder1 --id.name peer0 --id.secret peer0pw --id.type peer --tls.certfiles "${PWD}/organizations/fabric-ca/breeder1/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Registering user"
  set -x
  fabric-ca-client register --caname ca-breeder1 --id.name user1 --id.secret user1pw --id.type client --tls.certfiles "${PWD}/organizations/fabric-ca/breeder1/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Registering the org admin"
  set -x
  fabric-ca-client register --caname ca-breeder1 --id.name breeder1admin --id.secret breeder1adminpw --id.type admin --tls.certfiles "${PWD}/organizations/fabric-ca/breeder1/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Generating the peer0 msp"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:13054 --caname ca-breeder1 -M "${PWD}/organizations/peerOrganizations/breeder1.beefsupply.com/peers/peer0.breeder1.beefsupply.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/breeder1/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/breeder1.beefsupply.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/breeder1.beefsupply.com/peers/peer0.breeder1.beefsupply.com/msp/config.yaml"

  infoln "Generating the peer0-tls certificates, use --csr.hosts to specify Subject Alternative Names"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:13054 --caname ca-breeder1 -M "${PWD}/organizations/peerOrganizations/breeder1.beefsupply.com/peers/peer0.breeder1.beefsupply.com/tls" --enrollment.profile tls --csr.hosts peer0.breeder1.beefsupply.com --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/breeder1/ca-cert.pem"
  { set +x; } 2>/dev/null

  # Copy the tls CA cert, server cert, server keystore to well known file names in the peer's tls directory that are referenced by peer startup config
  cp "${PWD}/organizations/peerOrganizations/breeder1.beefsupply.com/peers/peer0.breeder1.beefsupply.com/tls/tlscacerts/"* "${PWD}/organizations/peerOrganizations/breeder1.beefsupply.com/peers/peer0.breeder1.beefsupply.com/tls/ca.crt"
  cp "${PWD}/organizations/peerOrganizations/breeder1.beefsupply.com/peers/peer0.breeder1.beefsupply.com/tls/signcerts/"* "${PWD}/organizations/peerOrganizations/breeder1.beefsupply.com/peers/peer0.breeder1.beefsupply.com/tls/server.crt"
  cp "${PWD}/organizations/peerOrganizations/breeder1.beefsupply.com/peers/peer0.breeder1.beefsupply.com/tls/keystore/"* "${PWD}/organizations/peerOrganizations/breeder1.beefsupply.com/peers/peer0.breeder1.beefsupply.com/tls/server.key"

  infoln "Generating the user msp"
  set -x
  fabric-ca-client enroll -u https://user1:user1pw@localhost:13054 --caname ca-breeder1 -M "${PWD}/organizations/peerOrganizations/breeder1.beefsupply.com/users/User1@breeder1.beefsupply.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/breeder1/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/breeder1.beefsupply.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/breeder1.beefsupply.com/users/User1@breeder1.beefsupply.com/msp/config.yaml"

  infoln "Generating the org admin msp"
  set -x
  fabric-ca-client enroll -u https://breeder1admin:breeder1adminpw@localhost:13054 --caname ca-breeder1 -M "${PWD}/organizations/peerOrganizations/breeder1.beefsupply.com/users/Admin@breeder1.beefsupply.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/breeder1/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/breeder1.beefsupply.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/breeder1.beefsupply.com/users/Admin@breeder1.beefsupply.com/msp/config.yaml"
}


function createProcessor() {
  infoln "Enrolling the CA admin"
  mkdir -p organizations/peerOrganizations/processor.beefsupply.com/

  export FABRIC_CA_CLIENT_HOME=${PWD}/organizations/peerOrganizations/processor.beefsupply.com/

  set -x
  fabric-ca-client enroll -u https://admin:adminpw@localhost:14054 --caname ca-processor --tls.certfiles "${PWD}/organizations/fabric-ca/processor/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo 'NodeOUs:
  Enable: true
  ClientOUIdentifier:
    Certificate: cacerts/localhost-14054-ca-processor.pem
    OrganizationalUnitIdentifier: client
  PeerOUIdentifier:
    Certificate: cacerts/localhost-14054-ca-processor.pem
    OrganizationalUnitIdentifier: peer
  AdminOUIdentifier:
    Certificate: cacerts/localhost-14054-ca-processor.pem
    OrganizationalUnitIdentifier: admin
  OrdererOUIdentifier:
    Certificate: cacerts/localhost-14054-ca-processor.pem
    OrganizationalUnitIdentifier: orderer' > "${PWD}/organizations/peerOrganizations/processor.beefsupply.com/msp/config.yaml"


  mkdir -p "${PWD}/organizations/peerOrganizations/processor.beefsupply.com/msp/tlscacerts"
  cp "${PWD}/organizations/fabric-ca/processor/ca-cert.pem" "${PWD}/organizations/peerOrganizations/processor.beefsupply.com/msp/tlscacerts/ca.crt"

 
  mkdir -p "${PWD}/organizations/peerOrganizations/processor.beefsupply.com/tlsca"
  cp "${PWD}/organizations/fabric-ca/processor/ca-cert.pem" "${PWD}/organizations/peerOrganizations/processor.beefsupply.com/tlsca/tlsca.processor.beefsupply.com-cert.pem"

  
  mkdir -p "${PWD}/organizations/peerOrganizations/processor.beefsupply.com/ca"
  cp "${PWD}/organizations/fabric-ca/processor/ca-cert.pem" "${PWD}/organizations/peerOrganizations/processor.beefsupply.com/ca/ca.processor.beefsupply.com-cert.pem"

  infoln "Registering peer0"
  set -x
  fabric-ca-client register --caname ca-processor --id.name peer0 --id.secret peer0pw --id.type peer --tls.certfiles "${PWD}/organizations/fabric-ca/processor/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Registering user"
  set -x
  fabric-ca-client register --caname ca-processor --id.name user1 --id.secret user1pw --id.type client --tls.certfiles "${PWD}/organizations/fabric-ca/processor/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Registering the org admin"
  set -x
  fabric-ca-client register --caname ca-processor --id.name processoradmin --id.secret processoradminpw --id.type admin --tls.certfiles "${PWD}/organizations/fabric-ca/processor/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Generating the peer0 msp"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:14054 --caname ca-processor -M "${PWD}/organizations/peerOrganizations/processor.beefsupply.com/peers/peer0.processor.beefsupply.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/processor/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/processor.beefsupply.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/processor.beefsupply.com/peers/peer0.processor.beefsupply.com/msp/config.yaml"

  infoln "Generating the peer0-tls certificates, use --csr.hosts to specify Subject Alternative Names"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:14054 --caname ca-processor -M "${PWD}/organizations/peerOrganizations/processor.beefsupply.com/peers/peer0.processor.beefsupply.com/tls" --enrollment.profile tls --csr.hosts peer0.processor.beefsupply.com --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/processor/ca-cert.pem"
  { set +x; } 2>/dev/null

  # Copy the tls CA cert, server cert, server keystore to well known file names in the peer's tls directory that are referenced by peer startup config
  cp "${PWD}/organizations/peerOrganizations/processor.beefsupply.com/peers/peer0.processor.beefsupply.com/tls/tlscacerts/"* "${PWD}/organizations/peerOrganizations/processor.beefsupply.com/peers/peer0.processor.beefsupply.com/tls/ca.crt"
  cp "${PWD}/organizations/peerOrganizations/processor.beefsupply.com/peers/peer0.processor.beefsupply.com/tls/signcerts/"* "${PWD}/organizations/peerOrganizations/processor.beefsupply.com/peers/peer0.processor.beefsupply.com/tls/server.crt"
  cp "${PWD}/organizations/peerOrganizations/processor.beefsupply.com/peers/peer0.processor.beefsupply.com/tls/keystore/"* "${PWD}/organizations/peerOrganizations/processor.beefsupply.com/peers/peer0.processor.beefsupply.com/tls/server.key"

  infoln "Generating the user msp"
  set -x
  fabric-ca-client enroll -u https://user1:user1pw@localhost:14054 --caname ca-processor -M "${PWD}/organizations/peerOrganizations/processor.beefsupply.com/users/User1@processor.beefsupply.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/processor/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/processor.beefsupply.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/processor.beefsupply.com/users/User1@processor.beefsupply.com/msp/config.yaml"

  infoln "Generating the org admin msp"
  set -x
  fabric-ca-client enroll -u https://processoradmin:processoradminpw@localhost:14054 --caname ca-processor -M "${PWD}/organizations/peerOrganizations/processor.beefsupply.com/users/Admin@processor.beefsupply.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/processor/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/processor.beefsupply.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/processor.beefsupply.com/users/Admin@processor.beefsupply.com/msp/config.yaml"
}


function createProcessor1() {
  infoln "Enrolling the CA admin"
  mkdir -p organizations/peerOrganizations/processor1.beefsupply.com/

  export FABRIC_CA_CLIENT_HOME=${PWD}/organizations/peerOrganizations/processor1.beefsupply.com/

  set -x
  fabric-ca-client enroll -u https://admin:adminpw@localhost:15054 --caname ca-processor1 --tls.certfiles "${PWD}/organizations/fabric-ca/processor1/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo 'NodeOUs:
  Enable: true
  ClientOUIdentifier:
    Certificate: cacerts/localhost-15054-ca-processor1.pem
    OrganizationalUnitIdentifier: client
  PeerOUIdentifier:
    Certificate: cacerts/localhost-15054-ca-processor1.pem
    OrganizationalUnitIdentifier: peer
  AdminOUIdentifier:
    Certificate: cacerts/localhost-15054-ca-processor1.pem
    OrganizationalUnitIdentifier: admin
  OrdererOUIdentifier:
    Certificate: cacerts/localhost-15054-ca-processor1.pem
    OrganizationalUnitIdentifier: orderer' > "${PWD}/organizations/peerOrganizations/processor1.beefsupply.com/msp/config.yaml"


  mkdir -p "${PWD}/organizations/peerOrganizations/processor1.beefsupply.com/msp/tlscacerts"
  cp "${PWD}/organizations/fabric-ca/processor1/ca-cert.pem" "${PWD}/organizations/peerOrganizations/processor1.beefsupply.com/msp/tlscacerts/ca.crt"

 
  mkdir -p "${PWD}/organizations/peerOrganizations/processor1.beefsupply.com/tlsca"
  cp "${PWD}/organizations/fabric-ca/processor1/ca-cert.pem" "${PWD}/organizations/peerOrganizations/processor1.beefsupply.com/tlsca/tlsca.processor1.beefsupply.com-cert.pem"

  
  mkdir -p "${PWD}/organizations/peerOrganizations/processor1.beefsupply.com/ca"
  cp "${PWD}/organizations/fabric-ca/processor1/ca-cert.pem" "${PWD}/organizations/peerOrganizations/processor1.beefsupply.com/ca/ca.processor1.beefsupply.com-cert.pem"

  infoln "Registering peer0"
  set -x
  fabric-ca-client register --caname ca-processor1 --id.name peer0 --id.secret peer0pw --id.type peer --tls.certfiles "${PWD}/organizations/fabric-ca/processor1/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Registering user"
  set -x
  fabric-ca-client register --caname ca-processor1 --id.name user1 --id.secret user1pw --id.type client --tls.certfiles "${PWD}/organizations/fabric-ca/processor1/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Registering the org admin"
  set -x
  fabric-ca-client register --caname ca-processor1 --id.name processor1admin --id.secret processor1adminpw --id.type admin --tls.certfiles "${PWD}/organizations/fabric-ca/processor1/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Generating the peer0 msp"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:15054 --caname ca-processor1 -M "${PWD}/organizations/peerOrganizations/processor1.beefsupply.com/peers/peer0.processor1.beefsupply.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/processor1/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/processor1.beefsupply.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/processor1.beefsupply.com/peers/peer0.processor1.beefsupply.com/msp/config.yaml"

  infoln "Generating the peer0-tls certificates, use --csr.hosts to specify Subject Alternative Names"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:15054 --caname ca-processor1 -M "${PWD}/organizations/peerOrganizations/processor1.beefsupply.com/peers/peer0.processor1.beefsupply.com/tls" --enrollment.profile tls --csr.hosts peer0.processor1.beefsupply.com --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/processor1/ca-cert.pem"
  { set +x; } 2>/dev/null

  # Copy the tls CA cert, server cert, server keystore to well known file names in the peer's tls directory that are referenced by peer startup config
  cp "${PWD}/organizations/peerOrganizations/processor1.beefsupply.com/peers/peer0.processor1.beefsupply.com/tls/tlscacerts/"* "${PWD}/organizations/peerOrganizations/processor1.beefsupply.com/peers/peer0.processor1.beefsupply.com/tls/ca.crt"
  cp "${PWD}/organizations/peerOrganizations/processor1.beefsupply.com/peers/peer0.processor1.beefsupply.com/tls/signcerts/"* "${PWD}/organizations/peerOrganizations/processor1.beefsupply.com/peers/peer0.processor1.beefsupply.com/tls/server.crt"
  cp "${PWD}/organizations/peerOrganizations/processor1.beefsupply.com/peers/peer0.processor1.beefsupply.com/tls/keystore/"* "${PWD}/organizations/peerOrganizations/processor1.beefsupply.com/peers/peer0.processor1.beefsupply.com/tls/server.key"

  infoln "Generating the user msp"
  set -x
  fabric-ca-client enroll -u https://user1:user1pw@localhost:15054 --caname ca-processor1 -M "${PWD}/organizations/peerOrganizations/processor1.beefsupply.com/users/User1@processor1.beefsupply.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/processor1/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/processor1.beefsupply.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/processor1.beefsupply.com/users/User1@processor1.beefsupply.com/msp/config.yaml"

  infoln "Generating the org admin msp"
  set -x
  fabric-ca-client enroll -u https://processor1admin:processor1adminpw@localhost:15054 --caname ca-processor1 -M "${PWD}/organizations/peerOrganizations/processor1.beefsupply.com/users/Admin@processor1.beefsupply.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/processor1/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/processor1.beefsupply.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/processor1.beefsupply.com/users/Admin@processor1.beefsupply.com/msp/config.yaml"
}



function createProcessor2() {
  infoln "Enrolling the CA admin"
  mkdir -p organizations/peerOrganizations/distributor.beefsupply.com/

  export FABRIC_CA_CLIENT_HOME=${PWD}/organizations/peerOrganizations/processor2.beefsupply.com/

  set -x
  fabric-ca-client enroll -u https://admin:adminpw@localhost:16054 --caname ca-processor2 --tls.certfiles "${PWD}/organizations/fabric-ca/processor2/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo 'NodeOUs:
  Enable: true
  ClientOUIdentifier:
    Certificate: cacerts/localhost-16054-ca-processor2.pem
    OrganizationalUnitIdentifier: client
  PeerOUIdentifier:
    Certificate: cacerts/localhost-16054-ca-processor2.pem
    OrganizationalUnitIdentifier: peer
  AdminOUIdentifier:
    Certificate: cacerts/localhost-16054-ca-processor2.pem
    OrganizationalUnitIdentifier: admin
  OrdererOUIdentifier:
    Certificate: cacerts/localhost-16054-ca-processor2.pem
    OrganizationalUnitIdentifier: orderer' > "${PWD}/organizations/peerOrganizations/processor2.beefsupply.com/msp/config.yaml"


  mkdir -p "${PWD}/organizations/peerOrganizations/processor2.beefsupply.com/msp/tlscacerts"
  cp "${PWD}/organizations/fabric-ca/processor2/ca-cert.pem" "${PWD}/organizations/peerOrganizations/processor2.beefsupply.com/msp/tlscacerts/ca.crt"

 
  mkdir -p "${PWD}/organizations/peerOrganizations/processor2.beefsupply.com/tlsca"
  cp "${PWD}/organizations/fabric-ca/processor2/ca-cert.pem" "${PWD}/organizations/peerOrganizations/processor2.beefsupply.com/tlsca/tlsca.processor2.beefsupply.com-cert.pem"

  
  mkdir -p "${PWD}/organizations/peerOrganizations/processor2.beefsupply.com/ca"
  cp "${PWD}/organizations/fabric-ca/processor2/ca-cert.pem" "${PWD}/organizations/peerOrganizations/processor2.beefsupply.com/ca/ca.processor2.beefsupply.com-cert.pem"

  infoln "Registering peer0"
  set -x
  fabric-ca-client register --caname ca-processor2 --id.name peer0 --id.secret peer0pw --id.type peer --tls.certfiles "${PWD}/organizations/fabric-ca/processor2/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Registering user"
  set -x
  fabric-ca-client register --caname ca-processor2 --id.name user1 --id.secret user1pw --id.type client --tls.certfiles "${PWD}/organizations/fabric-ca/processor2/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Registering the org admin"
  set -x
  fabric-ca-client register --caname ca-processor2 --id.name processor2admin --id.secret processor2adminpw --id.type admin --tls.certfiles "${PWD}/organizations/fabric-ca/processor2/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Generating the peer0 msp"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:16054 --caname ca-processor2 -M "${PWD}/organizations/peerOrganizations/processor2.beefsupply.com/peers/peer0.processor2.beefsupply.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/processor2/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/processor2.beefsupply.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/processor2.beefsupply.com/peers/peer0.processor2.beefsupply.com/msp/config.yaml"

  infoln "Generating the peer0-tls certificates, use --csr.hosts to specify Subject Alternative Names"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:16054 --caname ca-processor2 -M "${PWD}/organizations/peerOrganizations/processor2.beefsupply.com/peers/peer0.processor2.beefsupply.com/tls" --enrollment.profile tls --csr.hosts peer0.processor2.beefsupply.com --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/processor2/ca-cert.pem"
  { set +x; } 2>/dev/null

  # Copy the tls CA cert, server cert, server keystore to well known file names in the peer's tls directory that are referenced by peer startup config
  cp "${PWD}/organizations/peerOrganizations/processor2.beefsupply.com/peers/peer0.processor2.beefsupply.com/tls/tlscacerts/"* "${PWD}/organizations/peerOrganizations/processor2.beefsupply.com/peers/peer0.processor2.beefsupply.com/tls/ca.crt"
  cp "${PWD}/organizations/peerOrganizations/processor2.beefsupply.com/peers/peer0.processor2.beefsupply.com/tls/signcerts/"* "${PWD}/organizations/peerOrganizations/processor2.beefsupply.com/peers/peer0.processor2.beefsupply.com/tls/server.crt"
  cp "${PWD}/organizations/peerOrganizations/processor2.beefsupply.com/peers/peer0.processor2.beefsupply.com/tls/keystore/"* "${PWD}/organizations/peerOrganizations/processor2.beefsupply.com/peers/peer0.processor2.beefsupply.com/tls/server.key"

  infoln "Generating the user msp"
  set -x
  fabric-ca-client enroll -u https://user1:user1pw@localhost:16054 --caname ca-processor2 -M "${PWD}/organizations/peerOrganizations/processor2.beefsupply.com/users/User1@processor2.beefsupply.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/processor2/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/processor2.beefsupply.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/processor2.beefsupply.com/users/User1@processor2.beefsupply.com/msp/config.yaml"

  infoln "Generating the org admin msp"
  set -x
  fabric-ca-client enroll -u https://processor2admin:processor2adminpw@localhost:16054 --caname ca-processor2 -M "${PWD}/organizations/peerOrganizations/processor2.beefsupply.com/users/Admin@processor2.beefsupply.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/processor2/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/processor2.beefsupply.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/processor2.beefsupply.com/users/Admin@processor2.beefsupply.com/msp/config.yaml"
}


function createDistributor() {
  infoln "Enrolling the CA admin"
  mkdir -p organizations/peerOrganizations/distributor.beefsupply.com/

  export FABRIC_CA_CLIENT_HOME=${PWD}/organizations/peerOrganizations/distributor.beefsupply.com/

  set -x
  fabric-ca-client enroll -u https://admin:adminpw@localhost:17054 --caname ca-distributor --tls.certfiles "${PWD}/organizations/fabric-ca/distributor/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo 'NodeOUs:
  Enable: true
  ClientOUIdentifier:
    Certificate: cacerts/localhost-17054-ca-distributor.pem
    OrganizationalUnitIdentifier: client
  PeerOUIdentifier:
    Certificate: cacerts/localhost-17054-ca-distributor.pem
    OrganizationalUnitIdentifier: peer
  AdminOUIdentifier:
    Certificate: cacerts/localhost-17054-ca-distributor.pem
    OrganizationalUnitIdentifier: admin
  OrdererOUIdentifier:
    Certificate: cacerts/localhost-17054-ca-distributor.pem
    OrganizationalUnitIdentifier: orderer' > "${PWD}/organizations/peerOrganizations/distributor.beefsupply.com/msp/config.yaml"


  mkdir -p "${PWD}/organizations/peerOrganizations/distributor.beefsupply.com/msp/tlscacerts"
  cp "${PWD}/organizations/fabric-ca/distributor/ca-cert.pem" "${PWD}/organizations/peerOrganizations/distributor.beefsupply.com/msp/tlscacerts/ca.crt"

 
  mkdir -p "${PWD}/organizations/peerOrganizations/distributor.beefsupply.com/tlsca"
  cp "${PWD}/organizations/fabric-ca/distributor/ca-cert.pem" "${PWD}/organizations/peerOrganizations/distributor.beefsupply.com/tlsca/tlsca.distributor.beefsupply.com-cert.pem"

  
  mkdir -p "${PWD}/organizations/peerOrganizations/distributor.beefsupply.com/ca"
  cp "${PWD}/organizations/fabric-ca/distributor/ca-cert.pem" "${PWD}/organizations/peerOrganizations/distributor.beefsupply.com/ca/ca.distributor.beefsupply.com-cert.pem"

  infoln "Registering peer0"
  set -x
  fabric-ca-client register --caname ca-distributor --id.name peer0 --id.secret peer0pw --id.type peer --tls.certfiles "${PWD}/organizations/fabric-ca/distributor/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Registering user"
  set -x
  fabric-ca-client register --caname ca-distributor --id.name user1 --id.secret user1pw --id.type client --tls.certfiles "${PWD}/organizations/fabric-ca/distributor/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Registering the org admin"
  set -x
  fabric-ca-client register --caname ca-distributor --id.name distributoradmin --id.secret distributoradminpw --id.type admin --tls.certfiles "${PWD}/organizations/fabric-ca/distributor/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Generating the peer0 msp"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:17054 --caname ca-distributor -M "${PWD}/organizations/peerOrganizations/distributor.beefsupply.com/peers/peer0.distributor.beefsupply.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/distributor/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/distributor.beefsupply.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/distributor.beefsupply.com/peers/peer0.distributor.beefsupply.com/msp/config.yaml"

  infoln "Generating the peer0-tls certificates, use --csr.hosts to specify Subject Alternative Names"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:17054 --caname ca-distributor -M "${PWD}/organizations/peerOrganizations/distributor.beefsupply.com/peers/peer0.distributor.beefsupply.com/tls" --enrollment.profile tls --csr.hosts peer0.distributor.beefsupply.com --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/distributor/ca-cert.pem"
  { set +x; } 2>/dev/null

  # Copy the tls CA cert, server cert, server keystore to well known file names in the peer's tls directory that are referenced by peer startup config
  cp "${PWD}/organizations/peerOrganizations/distributor.beefsupply.com/peers/peer0.distributor.beefsupply.com/tls/tlscacerts/"* "${PWD}/organizations/peerOrganizations/distributor.beefsupply.com/peers/peer0.distributor.beefsupply.com/tls/ca.crt"
  cp "${PWD}/organizations/peerOrganizations/distributor.beefsupply.com/peers/peer0.distributor.beefsupply.com/tls/signcerts/"* "${PWD}/organizations/peerOrganizations/distributor.beefsupply.com/peers/peer0.distributor.beefsupply.com/tls/server.crt"
  cp "${PWD}/organizations/peerOrganizations/distributor.beefsupply.com/peers/peer0.distributor.beefsupply.com/tls/keystore/"* "${PWD}/organizations/peerOrganizations/distributor.beefsupply.com/peers/peer0.distributor.beefsupply.com/tls/server.key"

  infoln "Generating the user msp"
  set -x
  fabric-ca-client enroll -u https://user1:user1pw@localhost:17054 --caname ca-distributor -M "${PWD}/organizations/peerOrganizations/distributor.beefsupply.com/users/User1@distributor.beefsupply.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/distributor/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/distributor.beefsupply.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/distributor.beefsupply.com/users/User1@distributor.beefsupply.com/msp/config.yaml"

  infoln "Generating the org admin msp"
  set -x
  fabric-ca-client enroll -u https://distributoradmin:distributoradminpw@localhost:17054 --caname ca-distributor -M "${PWD}/organizations/peerOrganizations/distributor.beefsupply.com/users/Admin@distributor.beefsupply.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/distributor/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/distributor.beefsupply.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/distributor.beefsupply.com/users/Admin@distributor.beefsupply.com/msp/config.yaml"
}

function createDistributor1() {
  infoln "Enrolling the CA admin"
  mkdir -p organizations/peerOrganizations/distributor1.beefsupply.com/

  export FABRIC_CA_CLIENT_HOME=${PWD}/organizations/peerOrganizations/distributor1.beefsupply.com/

  set -x
  fabric-ca-client enroll -u https://admin:adminpw@localhost:18054 --caname ca-distributor1 --tls.certfiles "${PWD}/organizations/fabric-ca/distributor1/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo 'NodeOUs:
  Enable: true
  ClientOUIdentifier:
    Certificate: cacerts/localhost-18054-ca-distributor1.pem
    OrganizationalUnitIdentifier: client
  PeerOUIdentifier:
    Certificate: cacerts/localhost-18054-ca-distributor1.pem
    OrganizationalUnitIdentifier: peer
  AdminOUIdentifier:
    Certificate: cacerts/localhost-18054-ca-distributor1.pem
    OrganizationalUnitIdentifier: admin
  OrdererOUIdentifier:
    Certificate: cacerts/localhost-18054-ca-distributor1.pem
    OrganizationalUnitIdentifier: orderer' > "${PWD}/organizations/peerOrganizations/distributor1.beefsupply.com/msp/config.yaml"


  mkdir -p "${PWD}/organizations/peerOrganizations/distributor1.beefsupply.com/msp/tlscacerts"
  cp "${PWD}/organizations/fabric-ca/distributor1/ca-cert.pem" "${PWD}/organizations/peerOrganizations/distributor1.beefsupply.com/msp/tlscacerts/ca.crt"

 
  mkdir -p "${PWD}/organizations/peerOrganizations/distributor1.beefsupply.com/tlsca"
  cp "${PWD}/organizations/fabric-ca/distributor1/ca-cert.pem" "${PWD}/organizations/peerOrganizations/distributor1.beefsupply.com/tlsca/tlsca.distributor1.beefsupply.com-cert.pem"

  
  mkdir -p "${PWD}/organizations/peerOrganizations/distributor1.beefsupply.com/ca"
  cp "${PWD}/organizations/fabric-ca/distributor1/ca-cert.pem" "${PWD}/organizations/peerOrganizations/distributor1.beefsupply.com/ca/ca.distributor1.beefsupply.com-cert.pem"

  infoln "Registering peer0"
  set -x
  fabric-ca-client register --caname ca-distributor1 --id.name peer0 --id.secret peer0pw --id.type peer --tls.certfiles "${PWD}/organizations/fabric-ca/distributor1/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Registering user"
  set -x
  fabric-ca-client register --caname ca-distributor1 --id.name user1 --id.secret user1pw --id.type client --tls.certfiles "${PWD}/organizations/fabric-ca/distributor1/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Registering the org admin"
  set -x
  fabric-ca-client register --caname ca-distributor1 --id.name distributor1admin --id.secret distributor1adminpw --id.type admin --tls.certfiles "${PWD}/organizations/fabric-ca/distributor1/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Generating the peer0 msp"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:18054 --caname ca-distributor1 -M "${PWD}/organizations/peerOrganizations/distributor1.beefsupply.com/peers/peer0.distributor1.beefsupply.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/distributor1/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/distributor1.beefsupply.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/distributor1.beefsupply.com/peers/peer0.distributor1.beefsupply.com/msp/config.yaml"

  infoln "Generating the peer0-tls certificates, use --csr.hosts to specify Subject Alternative Names"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:18054 --caname ca-distributor1 -M "${PWD}/organizations/peerOrganizations/distributor1.beefsupply.com/peers/peer0.distributor1.beefsupply.com/tls" --enrollment.profile tls --csr.hosts peer0.distributor1.beefsupply.com --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/distributor1/ca-cert.pem"
  { set +x; } 2>/dev/null

  # Copy the tls CA cert, server cert, server keystore to well known file names in the peer's tls directory that are referenced by peer startup config
  cp "${PWD}/organizations/peerOrganizations/distributor1.beefsupply.com/peers/peer0.distributor1.beefsupply.com/tls/tlscacerts/"* "${PWD}/organizations/peerOrganizations/distributor1.beefsupply.com/peers/peer0.distributor1.beefsupply.com/tls/ca.crt"
  cp "${PWD}/organizations/peerOrganizations/distributor1.beefsupply.com/peers/peer0.distributor1.beefsupply.com/tls/signcerts/"* "${PWD}/organizations/peerOrganizations/distributor1.beefsupply.com/peers/peer0.distributor1.beefsupply.com/tls/server.crt"
  cp "${PWD}/organizations/peerOrganizations/distributor1.beefsupply.com/peers/peer0.distributor1.beefsupply.com/tls/keystore/"* "${PWD}/organizations/peerOrganizations/distributor1.beefsupply.com/peers/peer0.distributor1.beefsupply.com/tls/server.key"

  infoln "Generating the user msp"
  set -x
  fabric-ca-client enroll -u https://user1:user1pw@localhost:18054 --caname ca-distributor1 -M "${PWD}/organizations/peerOrganizations/distributor1.beefsupply.com/users/User1@distributor1.beefsupply.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/distributor1/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/distributor1.beefsupply.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/distributor1.beefsupply.com/users/User1@distributor1.beefsupply.com/msp/config.yaml"

  infoln "Generating the org admin msp"
  set -x
  fabric-ca-client enroll -u https://distributor1admin:distributor1adminpw@localhost:18054 --caname ca-distributor1 -M "${PWD}/organizations/peerOrganizations/distributor1.beefsupply.com/users/Admin@distributor1.beefsupply.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/distributor1/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/distributor1.beefsupply.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/distributor1.beefsupply.com/users/Admin@distributor1.beefsupply.com/msp/config.yaml"
}

function createDistributor2() {
  infoln "Enrolling the CA admin"
  mkdir -p organizations/peerOrganizations/distributor2.beefsupply.com/

  export FABRIC_CA_CLIENT_HOME=${PWD}/organizations/peerOrganizations/distributor2.beefsupply.com/

  set -x
  fabric-ca-client enroll -u https://admin:adminpw@localhost:19054 --caname ca-distributor2 --tls.certfiles "${PWD}/organizations/fabric-ca/distributor2/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo 'NodeOUs:
  Enable: true
  ClientOUIdentifier:
    Certificate: cacerts/localhost-19054-ca-distributor2.pem
    OrganizationalUnitIdentifier: client
  PeerOUIdentifier:
    Certificate: cacerts/localhost-19054-ca-distributor2.pem
    OrganizationalUnitIdentifier: peer
  AdminOUIdentifier:
    Certificate: cacerts/localhost-19054-ca-distributor1.pem
    OrganizationalUnitIdentifier: admin
  OrdererOUIdentifier:
    Certificate: cacerts/localhost-19054-ca-distributor2.pem
    OrganizationalUnitIdentifier: orderer' > "${PWD}/organizations/peerOrganizations/distributor2.beefsupply.com/msp/config.yaml"


  mkdir -p "${PWD}/organizations/peerOrganizations/distributor2.beefsupply.com/msp/tlscacerts"
  cp "${PWD}/organizations/fabric-ca/distributor2/ca-cert.pem" "${PWD}/organizations/peerOrganizations/distributor2.beefsupply.com/msp/tlscacerts/ca.crt"

 
  mkdir -p "${PWD}/organizations/peerOrganizations/distributor2.beefsupply.com/tlsca"
  cp "${PWD}/organizations/fabric-ca/distributor2/ca-cert.pem" "${PWD}/organizations/peerOrganizations/distributor2.beefsupply.com/tlsca/tlsca.distributor2.beefsupply.com-cert.pem"

  
  mkdir -p "${PWD}/organizations/peerOrganizations/distributor2.beefsupply.com/ca"
  cp "${PWD}/organizations/fabric-ca/distributor2/ca-cert.pem" "${PWD}/organizations/peerOrganizations/distributor2.beefsupply.com/ca/ca.distributor2.beefsupply.com-cert.pem"

  infoln "Registering peer0"
  set -x
  fabric-ca-client register --caname ca-distributor2 --id.name peer0 --id.secret peer0pw --id.type peer --tls.certfiles "${PWD}/organizations/fabric-ca/distributor2/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Registering user"
  set -x
  fabric-ca-client register --caname ca-distributor2 --id.name user1 --id.secret user1pw --id.type client --tls.certfiles "${PWD}/organizations/fabric-ca/distributor2/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Registering the org admin"
  set -x
  fabric-ca-client register --caname ca-distributor2 --id.name distributor2admin --id.secret distributor2adminpw --id.type admin --tls.certfiles "${PWD}/organizations/fabric-ca/distributor2/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Generating the peer0 msp"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:19054 --caname ca-distributor2 -M "${PWD}/organizations/peerOrganizations/distributor2.beefsupply.com/peers/peer0.distributor2.beefsupply.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/distributor2/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/distributor2.beefsupply.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/distributor2.beefsupply.com/peers/peer0.distributor2.beefsupply.com/msp/config.yaml"

  infoln "Generating the peer0-tls certificates, use --csr.hosts to specify Subject Alternative Names"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:19054 --caname ca-distributor2 -M "${PWD}/organizations/peerOrganizations/distributor2.beefsupply.com/peers/peer0.distributor2.beefsupply.com/tls" --enrollment.profile tls --csr.hosts peer0.distributor2.beefsupply.com --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/distributor2/ca-cert.pem"
  { set +x; } 2>/dev/null

  # Copy the tls CA cert, server cert, server keystore to well known file names in the peer's tls directory that are referenced by peer startup config
  cp "${PWD}/organizations/peerOrganizations/distributor2.beefsupply.com/peers/peer0.distributor2.beefsupply.com/tls/tlscacerts/"* "${PWD}/organizations/peerOrganizations/distributor2.beefsupply.com/peers/peer0.distributor2.beefsupply.com/tls/ca.crt"
  cp "${PWD}/organizations/peerOrganizations/distributor2.beefsupply.com/peers/peer0.distributor2.beefsupply.com/tls/signcerts/"* "${PWD}/organizations/peerOrganizations/distributor2.beefsupply.com/peers/peer0.distributor2.beefsupply.com/tls/server.crt"
  cp "${PWD}/organizations/peerOrganizations/distributor2.beefsupply.com/peers/peer0.distributor2.beefsupply.com/tls/keystore/"* "${PWD}/organizations/peerOrganizations/distributor2.beefsupply.com/peers/peer0.distributor2.beefsupply.com/tls/server.key"

  infoln "Generating the user msp"
  set -x
  fabric-ca-client enroll -u https://user1:user1pw@localhost:19054 --caname ca-distributor2 -M "${PWD}/organizations/peerOrganizations/distributor2.beefsupply.com/users/User1@distributor2.beefsupply.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/distributor2/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/distributor2.beefsupply.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/distributor2.beefsupply.com/users/User1@distributor2.beefsupply.com/msp/config.yaml"

  infoln "Generating the org admin msp"
  set -x
  fabric-ca-client enroll -u https://distributor2admin:distributor2adminpw@localhost:19054 --caname ca-distributor2 -M "${PWD}/organizations/peerOrganizations/distributor2.beefsupply.com/users/Admin@distributor2.beefsupply.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/distributor2/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/distributor2.beefsupply.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/distributor2.beefsupply.com/users/Admin@distributor2.beefsupply.com/msp/config.yaml"
}


function createDistributor3() {
  infoln "Enrolling the CA admin"
  mkdir -p organizations/peerOrganizations/distributor3.beefsupply.com/

  export FABRIC_CA_CLIENT_HOME=${PWD}/organizations/peerOrganizations/distributor3.beefsupply.com/

  set -x
  fabric-ca-client enroll -u https://admin:adminpw@localhost:20054 --caname ca-distributor3 --tls.certfiles "${PWD}/organizations/fabric-ca/distributor3/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo 'NodeOUs:
  Enable: true
  ClientOUIdentifier:
    Certificate: cacerts/localhost-20054-ca-distributor3.pem
    OrganizationalUnitIdentifier: client
  PeerOUIdentifier:
    Certificate: cacerts/localhost-20054-ca-distributor3.pem
    OrganizationalUnitIdentifier: peer
  AdminOUIdentifier:
    Certificate: cacerts/localhost-20054-ca-distributor1.pem
    OrganizationalUnitIdentifier: admin
  OrdererOUIdentifier:
    Certificate: cacerts/localhost-20054-ca-distributor3.pem
    OrganizationalUnitIdentifier: orderer' > "${PWD}/organizations/peerOrganizations/distributor3.beefsupply.com/msp/config.yaml"


  mkdir -p "${PWD}/organizations/peerOrganizations/distributor3.beefsupply.com/msp/tlscacerts"
  cp "${PWD}/organizations/fabric-ca/distributor3/ca-cert.pem" "${PWD}/organizations/peerOrganizations/distributor3.beefsupply.com/msp/tlscacerts/ca.crt"

 
  mkdir -p "${PWD}/organizations/peerOrganizations/distributor3.beefsupply.com/tlsca"
  cp "${PWD}/organizations/fabric-ca/distributor3/ca-cert.pem" "${PWD}/organizations/peerOrganizations/distributor3.beefsupply.com/tlsca/tlsca.distributor3.beefsupply.com-cert.pem"

  
  mkdir -p "${PWD}/organizations/peerOrganizations/distributor3.beefsupply.com/ca"
  cp "${PWD}/organizations/fabric-ca/distributor3/ca-cert.pem" "${PWD}/organizations/peerOrganizations/distributor3.beefsupply.com/ca/ca.distributor3.beefsupply.com-cert.pem"

  infoln "Registering peer0"
  set -x
  fabric-ca-client register --caname ca-distributor3 --id.name peer0 --id.secret peer0pw --id.type peer --tls.certfiles "${PWD}/organizations/fabric-ca/distributor3/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Registering user"
  set -x
  fabric-ca-client register --caname ca-distributor3 --id.name user1 --id.secret user1pw --id.type client --tls.certfiles "${PWD}/organizations/fabric-ca/distributor3/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Registering the org admin"
  set -x
  fabric-ca-client register --caname ca-distributor3 --id.name distributor3admin --id.secret distributor3adminpw --id.type admin --tls.certfiles "${PWD}/organizations/fabric-ca/distributor3/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Generating the peer0 msp"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:20054 --caname ca-distributor3 -M "${PWD}/organizations/peerOrganizations/distributor3.beefsupply.com/peers/peer0.distributor3.beefsupply.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/distributor3/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/distributor3.beefsupply.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/distributor3.beefsupply.com/peers/peer0.distributor3.beefsupply.com/msp/config.yaml"

  infoln "Generating the peer0-tls certificates, use --csr.hosts to specify Subject Alternative Names"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:20054 --caname ca-distributor3 -M "${PWD}/organizations/peerOrganizations/distributor3.beefsupply.com/peers/peer0.distributor3.beefsupply.com/tls" --enrollment.profile tls --csr.hosts peer0.distributor3.beefsupply.com --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/distributor3/ca-cert.pem"
  { set +x; } 2>/dev/null

  # Copy the tls CA cert, server cert, server keystore to well known file names in the peer's tls directory that are referenced by peer startup config
  cp "${PWD}/organizations/peerOrganizations/distributor3.beefsupply.com/peers/peer0.distributor3.beefsupply.com/tls/tlscacerts/"* "${PWD}/organizations/peerOrganizations/distributor3.beefsupply.com/peers/peer0.distributor3.beefsupply.com/tls/ca.crt"
  cp "${PWD}/organizations/peerOrganizations/distributor3.beefsupply.com/peers/peer0.distributor3.beefsupply.com/tls/signcerts/"* "${PWD}/organizations/peerOrganizations/distributor3.beefsupply.com/peers/peer0.distributor3.beefsupply.com/tls/server.crt"
  cp "${PWD}/organizations/peerOrganizations/distributor3.beefsupply.com/peers/peer0.distributor3.beefsupply.com/tls/keystore/"* "${PWD}/organizations/peerOrganizations/distributor3.beefsupply.com/peers/peer0.distributor3.beefsupply.com/tls/server.key"

  infoln "Generating the user msp"
  set -x
  fabric-ca-client enroll -u https://user1:user1pw@localhost:20054 --caname ca-distributor3 -M "${PWD}/organizations/peerOrganizations/distributor3.beefsupply.com/users/User1@distributor3.beefsupply.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/distributor3/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/distributor3.beefsupply.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/distributor3.beefsupply.com/users/User1@distributor3.beefsupply.com/msp/config.yaml"

  infoln "Generating the org admin msp"
  set -x
  fabric-ca-client enroll -u https://distributor3admin:distributor3adminpw@localhost:20054 --caname ca-distributor3 -M "${PWD}/organizations/peerOrganizations/distributor3.beefsupply.com/users/Admin@distributor3.beefsupply.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/distributor3/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/distributor3.beefsupply.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/distributor3.beefsupply.com/users/Admin@distributor3.beefsupply.com/msp/config.yaml"
}



function createRetailer() {
  infoln "Enrolling the CA admin"
  mkdir -p organizations/peerOrganizations/retailer.beefsupply.com/

  export FABRIC_CA_CLIENT_HOME=${PWD}/organizations/peerOrganizations/retailer.beefsupply.com/

  set -x
  fabric-ca-client enroll -u https://admin:adminpw@localhost:21054 --caname ca-retailer --tls.certfiles "${PWD}/organizations/fabric-ca/retailer/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo 'NodeOUs:
  Enable: true
  ClientOUIdentifier:
    Certificate: cacerts/localhost-21054-ca-retailer.pem
    OrganizationalUnitIdentifier: client
  PeerOUIdentifier:
    Certificate: cacerts/localhost-21054-ca-retailer.pem
    OrganizationalUnitIdentifier: peer
  AdminOUIdentifier:
    Certificate: cacerts/localhost-21054-ca-distributor1.pem
    OrganizationalUnitIdentifier: admin
  OrdererOUIdentifier:
    Certificate: cacerts/localhost-21054-ca-retailer.pem
    OrganizationalUnitIdentifier: orderer' > "${PWD}/organizations/peerOrganizations/retailer.beefsupply.com/msp/config.yaml"


  mkdir -p "${PWD}/organizations/peerOrganizations/retailer.beefsupply.com/msp/tlscacerts"
  cp "${PWD}/organizations/fabric-ca/retailer/ca-cert.pem" "${PWD}/organizations/peerOrganizations/retailer.beefsupply.com/msp/tlscacerts/ca.crt"

 
  mkdir -p "${PWD}/organizations/peerOrganizations/retailer.beefsupply.com/tlsca"
  cp "${PWD}/organizations/fabric-ca/retailer/ca-cert.pem" "${PWD}/organizations/peerOrganizations/retailer.beefsupply.com/tlsca/tlsca.retailer.beefsupply.com-cert.pem"

  
  mkdir -p "${PWD}/organizations/peerOrganizations/retailer.beefsupply.com/ca"
  cp "${PWD}/organizations/fabric-ca/retailer/ca-cert.pem" "${PWD}/organizations/peerOrganizations/retailer.beefsupply.com/ca/ca.retailer.beefsupply.com-cert.pem"

  infoln "Registering peer0"
  set -x
  fabric-ca-client register --caname ca-retailer --id.name peer0 --id.secret peer0pw --id.type peer --tls.certfiles "${PWD}/organizations/fabric-ca/retailer/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Registering user"
  set -x
  fabric-ca-client register --caname ca-retailer --id.name user1 --id.secret user1pw --id.type client --tls.certfiles "${PWD}/organizations/fabric-ca/retailer/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Registering the org admin"
  set -x
  fabric-ca-client register --caname ca-retailer --id.name retaileradmin --id.secret retaileradminpw --id.type admin --tls.certfiles "${PWD}/organizations/fabric-ca/retailer/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Generating the peer0 msp"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:21054 --caname ca-retailer -M "${PWD}/organizations/peerOrganizations/retailer.beefsupply.com/peers/peer0.retailer.beefsupply.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/retailer/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/retailer.beefsupply.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/retailer.beefsupply.com/peers/peer0.retailer.beefsupply.com/msp/config.yaml"

  infoln "Generating the peer0-tls certificates, use --csr.hosts to specify Subject Alternative Names"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:21054 --caname ca-retailer -M "${PWD}/organizations/peerOrganizations/retailer.beefsupply.com/peers/peer0.retailer.beefsupply.com/tls" --enrollment.profile tls --csr.hosts peer0.retailer.beefsupply.com --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/retailer/ca-cert.pem"
  { set +x; } 2>/dev/null

  # Copy the tls CA cert, server cert, server keystore to well known file names in the peer's tls directory that are referenced by peer startup config
  cp "${PWD}/organizations/peerOrganizations/retailer.beefsupply.com/peers/peer0.retailer.beefsupply.com/tls/tlscacerts/"* "${PWD}/organizations/peerOrganizations/retailer.beefsupply.com/peers/peer0.retailer.beefsupply.com/tls/ca.crt"
  cp "${PWD}/organizations/peerOrganizations/retailer.beefsupply.com/peers/peer0.retailer.beefsupply.com/tls/signcerts/"* "${PWD}/organizations/peerOrganizations/retailer.beefsupply.com/peers/peer0.retailer.beefsupply.com/tls/server.crt"
  cp "${PWD}/organizations/peerOrganizations/retailer.beefsupply.com/peers/peer0.retailer.beefsupply.com/tls/keystore/"* "${PWD}/organizations/peerOrganizations/retailer.beefsupply.com/peers/peer0.retailer.beefsupply.com/tls/server.key"

  infoln "Generating the user msp"
  set -x
  fabric-ca-client enroll -u https://user1:user1pw@localhost:21054 --caname ca-retailer -M "${PWD}/organizations/peerOrganizations/retailer.beefsupply.com/users/User1@retailer.beefsupply.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/retailer/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/retailer.beefsupply.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/retailer.beefsupply.com/users/User1@retailer.beefsupply.com/msp/config.yaml"

  infoln "Generating the org admin msp"
  set -x
  fabric-ca-client enroll -u https://retaileradmin:retaileradminpw@localhost:21054 --caname ca-retailer -M "${PWD}/organizations/peerOrganizations/retailer.beefsupply.com/users/Admin@retailer.beefsupply.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/retailer/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/retailer.beefsupply.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/retailer.beefsupply.com/users/Admin@retailer.beefsupply.com/msp/config.yaml"
}



function createRetailer1() {
  infoln "Enrolling the CA admin"
  mkdir -p organizations/peerOrganizations/retailer1.beefsupply.com/

  export FABRIC_CA_CLIENT_HOME=${PWD}/organizations/peerOrganizations/retailer1.beefsupply.com/

  set -x
  fabric-ca-client enroll -u https://admin:adminpw@localhost:22054 --caname ca-retailer1 --tls.certfiles "${PWD}/organizations/fabric-ca/retailer1/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo 'NodeOUs:
  Enable: true
  ClientOUIdentifier:
    Certificate: cacerts/localhost-22054-ca-retailer1.pem
    OrganizationalUnitIdentifier: client
  PeerOUIdentifier:
    Certificate: cacerts/localhost-22054-ca-retailer1.pem
    OrganizationalUnitIdentifier: peer
  AdminOUIdentifier:
    Certificate: cacerts/localhost-22054-ca-distributor1.pem
    OrganizationalUnitIdentifier: admin
  OrdererOUIdentifier:
    Certificate: cacerts/localhost-22054-ca-retailer1.pem
    OrganizationalUnitIdentifier: orderer' > "${PWD}/organizations/peerOrganizations/retailer1.beefsupply.com/msp/config.yaml"


  mkdir -p "${PWD}/organizations/peerOrganizations/retailer1.beefsupply.com/msp/tlscacerts"
  cp "${PWD}/organizations/fabric-ca/retailer1/ca-cert.pem" "${PWD}/organizations/peerOrganizations/retailer1.beefsupply.com/msp/tlscacerts/ca.crt"

 
  mkdir -p "${PWD}/organizations/peerOrganizations/retailer1.beefsupply.com/tlsca"
  cp "${PWD}/organizations/fabric-ca/retailer1/ca-cert.pem" "${PWD}/organizations/peerOrganizations/retailer1.beefsupply.com/tlsca/tlsca.retailer1.beefsupply.com-cert.pem"

  
  mkdir -p "${PWD}/organizations/peerOrganizations/retailer1.beefsupply.com/ca"
  cp "${PWD}/organizations/fabric-ca/retailer1/ca-cert.pem" "${PWD}/organizations/peerOrganizations/retailer1.beefsupply.com/ca/ca.retailer1.beefsupply.com-cert.pem"

  infoln "Registering peer0"
  set -x
  fabric-ca-client register --caname ca-retailer1 --id.name peer0 --id.secret peer0pw --id.type peer --tls.certfiles "${PWD}/organizations/fabric-ca/retailer1/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Registering user"
  set -x
  fabric-ca-client register --caname ca-retailer1 --id.name user1 --id.secret user1pw --id.type client --tls.certfiles "${PWD}/organizations/fabric-ca/retailer1/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Registering the org admin"
  set -x
  fabric-ca-client register --caname ca-retailer1 --id.name retailer1admin --id.secret retailer1adminpw --id.type admin --tls.certfiles "${PWD}/organizations/fabric-ca/retailer1/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Generating the peer0 msp"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:22054 --caname ca-retailer1 -M "${PWD}/organizations/peerOrganizations/retailer1.beefsupply.com/peers/peer0.retailer1.beefsupply.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/retailer1/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/retailer1.beefsupply.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/retailer1.beefsupply.com/peers/peer0.retailer1.beefsupply.com/msp/config.yaml"

  infoln "Generating the peer0-tls certificates, use --csr.hosts to specify Subject Alternative Names"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:22054 --caname ca-retailer1 -M "${PWD}/organizations/peerOrganizations/retailer1.beefsupply.com/peers/peer0.retailer1.beefsupply.com/tls" --enrollment.profile tls --csr.hosts peer0.retailer1.beefsupply.com --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/retailer1/ca-cert.pem"
  { set +x; } 2>/dev/null

  # Copy the tls CA cert, server cert, server keystore to well known file names in the peer's tls directory that are referenced by peer startup config
  cp "${PWD}/organizations/peerOrganizations/retailer1.beefsupply.com/peers/peer0.retailer1.beefsupply.com/tls/tlscacerts/"* "${PWD}/organizations/peerOrganizations/retailer1.beefsupply.com/peers/peer0.retailer1.beefsupply.com/tls/ca.crt"
  cp "${PWD}/organizations/peerOrganizations/retailer1.beefsupply.com/peers/peer0.retailer1.beefsupply.com/tls/signcerts/"* "${PWD}/organizations/peerOrganizations/retailer1.beefsupply.com/peers/peer0.retailer1.beefsupply.com/tls/server.crt"
  cp "${PWD}/organizations/peerOrganizations/retailer1.beefsupply.com/peers/peer0.retailer1.beefsupply.com/tls/keystore/"* "${PWD}/organizations/peerOrganizations/retailer1.beefsupply.com/peers/peer0.retailer1.beefsupply.com/tls/server.key"

  infoln "Generating the user msp"
  set -x
  fabric-ca-client enroll -u https://user1:user1pw@localhost:22054 --caname ca-retailer1 -M "${PWD}/organizations/peerOrganizations/retailer1.beefsupply.com/users/User1@retailer1.beefsupply.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/retailer1/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/retailer1.beefsupply.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/retailer1.beefsupply.com/users/User1@retailer1.beefsupply.com/msp/config.yaml"

  infoln "Generating the org admin msp"
  set -x
  fabric-ca-client enroll -u https://retailer1admin:retailer1adminpw@localhost:22054 --caname ca-retailer1 -M "${PWD}/organizations/peerOrganizations/retailer1.beefsupply.com/users/Admin@retailer1.beefsupply.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/retailer1/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/retailer1.beefsupply.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/retailer1.beefsupply.com/users/Admin@retailer1.beefsupply.com/msp/config.yaml"
}


function createRetailer2() {
  infoln "Enrolling the CA admin"
  mkdir -p organizations/peerOrganizations/retailer2.beefsupply.com/

  export FABRIC_CA_CLIENT_HOME=${PWD}/organizations/peerOrganizations/retailer2.beefsupply.com/

  set -x
  fabric-ca-client enroll -u https://admin:adminpw@localhost:23054 --caname ca-retailer2 --tls.certfiles "${PWD}/organizations/fabric-ca/retailer2/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo 'NodeOUs:
  Enable: true
  ClientOUIdentifier:
    Certificate: cacerts/localhost-23054-ca-retailer2.pem
    OrganizationalUnitIdentifier: client
  PeerOUIdentifier:
    Certificate: cacerts/localhost-23054-ca-retailer2.pem
    OrganizationalUnitIdentifier: peer
  AdminOUIdentifier:
    Certificate: cacerts/localhost-23054-ca-distributor1.pem
    OrganizationalUnitIdentifier: admin
  OrdererOUIdentifier:
    Certificate: cacerts/localhost-23054-ca-retailer2.pem
    OrganizationalUnitIdentifier: orderer' > "${PWD}/organizations/peerOrganizations/retailer2.beefsupply.com/msp/config.yaml"


  mkdir -p "${PWD}/organizations/peerOrganizations/retailer2.beefsupply.com/msp/tlscacerts"
  cp "${PWD}/organizations/fabric-ca/retailer2/ca-cert.pem" "${PWD}/organizations/peerOrganizations/retailer2.beefsupply.com/msp/tlscacerts/ca.crt"

 
  mkdir -p "${PWD}/organizations/peerOrganizations/retailer2.beefsupply.com/tlsca"
  cp "${PWD}/organizations/fabric-ca/retailer2/ca-cert.pem" "${PWD}/organizations/peerOrganizations/retailer2.beefsupply.com/tlsca/tlsca.retailer2.beefsupply.com-cert.pem"

  
  mkdir -p "${PWD}/organizations/peerOrganizations/retailer2.beefsupply.com/ca"
  cp "${PWD}/organizations/fabric-ca/retailer2/ca-cert.pem" "${PWD}/organizations/peerOrganizations/retailer2.beefsupply.com/ca/ca.retailer2.beefsupply.com-cert.pem"

  infoln "Registering peer0"
  set -x
  fabric-ca-client register --caname ca-retailer2 --id.name peer0 --id.secret peer0pw --id.type peer --tls.certfiles "${PWD}/organizations/fabric-ca/retailer2/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Registering user"
  set -x
  fabric-ca-client register --caname ca-retailer2 --id.name user1 --id.secret user1pw --id.type client --tls.certfiles "${PWD}/organizations/fabric-ca/retailer2/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Registering the org admin"
  set -x
  fabric-ca-client register --caname ca-retailer2 --id.name retailer2admin --id.secret retailer2adminpw --id.type admin --tls.certfiles "${PWD}/organizations/fabric-ca/retailer2/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Generating the peer0 msp"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:23054 --caname ca-retailer2 -M "${PWD}/organizations/peerOrganizations/retailer2.beefsupply.com/peers/peer0.retailer2.beefsupply.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/retailer2/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/retailer2.beefsupply.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/retailer2.beefsupply.com/peers/peer0.retailer2.beefsupply.com/msp/config.yaml"

  infoln "Generating the peer0-tls certificates, use --csr.hosts to specify Subject Alternative Names"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:23054 --caname ca-retailer2 -M "${PWD}/organizations/peerOrganizations/retailer2.beefsupply.com/peers/peer0.retailer2.beefsupply.com/tls" --enrollment.profile tls --csr.hosts peer0.retailer2.beefsupply.com --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/retailer2/ca-cert.pem"
  { set +x; } 2>/dev/null

  # Copy the tls CA cert, server cert, server keystore to well known file names in the peer's tls directory that are referenced by peer startup config
  cp "${PWD}/organizations/peerOrganizations/retailer2.beefsupply.com/peers/peer0.retailer2.beefsupply.com/tls/tlscacerts/"* "${PWD}/organizations/peerOrganizations/retailer2.beefsupply.com/peers/peer0.retailer2.beefsupply.com/tls/ca.crt"
  cp "${PWD}/organizations/peerOrganizations/retailer2.beefsupply.com/peers/peer0.retailer2.beefsupply.com/tls/signcerts/"* "${PWD}/organizations/peerOrganizations/retailer2.beefsupply.com/peers/peer0.retailer2.beefsupply.com/tls/server.crt"
  cp "${PWD}/organizations/peerOrganizations/retailer2.beefsupply.com/peers/peer0.retailer2.beefsupply.com/tls/keystore/"* "${PWD}/organizations/peerOrganizations/retailer2.beefsupply.com/peers/peer0.retailer2.beefsupply.com/tls/server.key"

  infoln "Generating the user msp"
  set -x
  fabric-ca-client enroll -u https://user1:user1pw@localhost:23054 --caname ca-retailer2 -M "${PWD}/organizations/peerOrganizations/retailer2.beefsupply.com/users/User1@retailer2.beefsupply.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/retailer2/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/retailer2.beefsupply.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/retailer2.beefsupply.com/users/User1@retailer2.beefsupply.com/msp/config.yaml"

  infoln "Generating the org admin msp"
  set -x
  fabric-ca-client enroll -u https://retailer2admin:retailer2adminpw@localhost:23054 --caname ca-retailer2 -M "${PWD}/organizations/peerOrganizations/retailer2.beefsupply.com/users/Admin@retailer2.beefsupply.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/retailer2/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/retailer2.beefsupply.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/retailer2.beefsupply.com/users/Admin@retailer2.beefsupply.com/msp/config.yaml"
}


function createRetailer3() {
  infoln "Enrolling the CA admin"
  mkdir -p organizations/peerOrganizations/retailer3.beefsupply.com/

  export FABRIC_CA_CLIENT_HOME=${PWD}/organizations/peerOrganizations/retailer3.beefsupply.com/

  set -x
  fabric-ca-client enroll -u https://admin:adminpw@localhost:24054 --caname ca-retailer3 --tls.certfiles "${PWD}/organizations/fabric-ca/retailer3/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo 'NodeOUs:
  Enable: true
  ClientOUIdentifier:
    Certificate: cacerts/localhost-24054-ca-retailer3.pem
    OrganizationalUnitIdentifier: client
  PeerOUIdentifier:
    Certificate: cacerts/localhost-24054-ca-retailer3.pem
    OrganizationalUnitIdentifier: peer
  AdminOUIdentifier:
    Certificate: cacerts/localhost-24054-ca-distributor1.pem
    OrganizationalUnitIdentifier: admin
  OrdererOUIdentifier:
    Certificate: cacerts/localhost-24054-ca-retailer3.pem
    OrganizationalUnitIdentifier: orderer' > "${PWD}/organizations/peerOrganizations/retailer3.beefsupply.com/msp/config.yaml"


  mkdir -p "${PWD}/organizations/peerOrganizations/retailer3.beefsupply.com/msp/tlscacerts"
  cp "${PWD}/organizations/fabric-ca/retailer3/ca-cert.pem" "${PWD}/organizations/peerOrganizations/retailer3.beefsupply.com/msp/tlscacerts/ca.crt"

 
  mkdir -p "${PWD}/organizations/peerOrganizations/retailer3.beefsupply.com/tlsca"
  cp "${PWD}/organizations/fabric-ca/retailer3/ca-cert.pem" "${PWD}/organizations/peerOrganizations/retailer3.beefsupply.com/tlsca/tlsca.retailer3.beefsupply.com-cert.pem"

  
  mkdir -p "${PWD}/organizations/peerOrganizations/retailer3.beefsupply.com/ca"
  cp "${PWD}/organizations/fabric-ca/retailer3/ca-cert.pem" "${PWD}/organizations/peerOrganizations/retailer3.beefsupply.com/ca/ca.retailer3.beefsupply.com-cert.pem"

  infoln "Registering peer0"
  set -x
  fabric-ca-client register --caname ca-retailer3 --id.name peer0 --id.secret peer0pw --id.type peer --tls.certfiles "${PWD}/organizations/fabric-ca/retailer3/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Registering user"
  set -x
  fabric-ca-client register --caname ca-retailer3 --id.name user1 --id.secret user1pw --id.type client --tls.certfiles "${PWD}/organizations/fabric-ca/retailer3/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Registering the org admin"
  set -x
  fabric-ca-client register --caname ca-retailer3 --id.name retailer3admin --id.secret retailer3adminpw --id.type admin --tls.certfiles "${PWD}/organizations/fabric-ca/retailer3/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Generating the peer0 msp"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:24054 --caname ca-retailer3 -M "${PWD}/organizations/peerOrganizations/retailer3.beefsupply.com/peers/peer0.retailer3.beefsupply.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/retailer3/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/retailer3.beefsupply.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/retailer3.beefsupply.com/peers/peer0.retailer3.beefsupply.com/msp/config.yaml"

  infoln "Generating the peer0-tls certificates, use --csr.hosts to specify Subject Alternative Names"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:24054 --caname ca-retailer3 -M "${PWD}/organizations/peerOrganizations/retailer3.beefsupply.com/peers/peer0.retailer3.beefsupply.com/tls" --enrollment.profile tls --csr.hosts peer0.retailer3.beefsupply.com --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/retailer3/ca-cert.pem"
  { set +x; } 2>/dev/null

  # Copy the tls CA cert, server cert, server keystore to well known file names in the peer's tls directory that are referenced by peer startup config
  cp "${PWD}/organizations/peerOrganizations/retailer3.beefsupply.com/peers/peer0.retailer3.beefsupply.com/tls/tlscacerts/"* "${PWD}/organizations/peerOrganizations/retailer3.beefsupply.com/peers/peer0.retailer3.beefsupply.com/tls/ca.crt"
  cp "${PWD}/organizations/peerOrganizations/retailer3.beefsupply.com/peers/peer0.retailer3.beefsupply.com/tls/signcerts/"* "${PWD}/organizations/peerOrganizations/retailer3.beefsupply.com/peers/peer0.retailer3.beefsupply.com/tls/server.crt"
  cp "${PWD}/organizations/peerOrganizations/retailer3.beefsupply.com/peers/peer0.retailer3.beefsupply.com/tls/keystore/"* "${PWD}/organizations/peerOrganizations/retailer3.beefsupply.com/peers/peer0.retailer3.beefsupply.com/tls/server.key"

  infoln "Generating the user msp"
  set -x
  fabric-ca-client enroll -u https://user1:user1pw@localhost:24054 --caname ca-retailer3 -M "${PWD}/organizations/peerOrganizations/retailer3.beefsupply.com/users/User1@retailer3.beefsupply.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/retailer3/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/retailer3.beefsupply.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/retailer3.beefsupply.com/users/User1@retailer3.beefsupply.com/msp/config.yaml"

  infoln "Generating the org admin msp"
  set -x
  fabric-ca-client enroll -u https://retailer3admin:retailer3adminpw@localhost:24054 --caname ca-retailer3 -M "${PWD}/organizations/peerOrganizations/retailer3.beefsupply.com/users/Admin@retailer3.beefsupply.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/retailer3/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/retailer3.beefsupply.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/retailer3.beefsupply.com/users/Admin@retailer3.beefsupply.com/msp/config.yaml"
}


function createRetailer4() {
  infoln "Enrolling the CA admin"
  mkdir -p organizations/peerOrganizations/retailer4.beefsupply.com/

  export FABRIC_CA_CLIENT_HOME=${PWD}/organizations/peerOrganizations/retailer4.beefsupply.com/

  set -x
  fabric-ca-client enroll -u https://admin:adminpw@localhost:25054 --caname ca-retailer4 --tls.certfiles "${PWD}/organizations/fabric-ca/retailer4/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo 'NodeOUs:
  Enable: true
  ClientOUIdentifier:
    Certificate: cacerts/localhost-25054-ca-retailer4.pem
    OrganizationalUnitIdentifier: client
  PeerOUIdentifier:
    Certificate: cacerts/localhost-25054-ca-retailer4.pem
    OrganizationalUnitIdentifier: peer
  AdminOUIdentifier:
    Certificate: cacerts/localhost-25054-ca-distributor1.pem
    OrganizationalUnitIdentifier: admin
  OrdererOUIdentifier:
    Certificate: cacerts/localhost-25054-ca-retailer4.pem
    OrganizationalUnitIdentifier: orderer' > "${PWD}/organizations/peerOrganizations/retailer4.beefsupply.com/msp/config.yaml"


  mkdir -p "${PWD}/organizations/peerOrganizations/retailer4.beefsupply.com/msp/tlscacerts"
  cp "${PWD}/organizations/fabric-ca/retailer4/ca-cert.pem" "${PWD}/organizations/peerOrganizations/retailer4.beefsupply.com/msp/tlscacerts/ca.crt"

 
  mkdir -p "${PWD}/organizations/peerOrganizations/retailer4.beefsupply.com/tlsca"
  cp "${PWD}/organizations/fabric-ca/retailer4/ca-cert.pem" "${PWD}/organizations/peerOrganizations/retailer4.beefsupply.com/tlsca/tlsca.retailer4.beefsupply.com-cert.pem"

  
  mkdir -p "${PWD}/organizations/peerOrganizations/retailer4.beefsupply.com/ca"
  cp "${PWD}/organizations/fabric-ca/retailer4/ca-cert.pem" "${PWD}/organizations/peerOrganizations/retailer4.beefsupply.com/ca/ca.retailer4.beefsupply.com-cert.pem"

  infoln "Registering peer0"
  set -x
  fabric-ca-client register --caname ca-retailer4 --id.name peer0 --id.secret peer0pw --id.type peer --tls.certfiles "${PWD}/organizations/fabric-ca/retailer4/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Registering user"
  set -x
  fabric-ca-client register --caname ca-retailer4 --id.name user1 --id.secret user1pw --id.type client --tls.certfiles "${PWD}/organizations/fabric-ca/retailer4/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Registering the org admin"
  set -x
  fabric-ca-client register --caname ca-retailer4 --id.name retailer4admin --id.secret retailer4adminpw --id.type admin --tls.certfiles "${PWD}/organizations/fabric-ca/retailer4/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Generating the peer0 msp"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:25054 --caname ca-retailer4 -M "${PWD}/organizations/peerOrganizations/retailer4.beefsupply.com/peers/peer0.retailer4.beefsupply.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/retailer4/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/retailer4.beefsupply.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/retailer4.beefsupply.com/peers/peer0.retailer4.beefsupply.com/msp/config.yaml"

  infoln "Generating the peer0-tls certificates, use --csr.hosts to specify Subject Alternative Names"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:25054 --caname ca-retailer4 -M "${PWD}/organizations/peerOrganizations/retailer4.beefsupply.com/peers/peer0.retailer4.beefsupply.com/tls" --enrollment.profile tls --csr.hosts peer0.retailer4.beefsupply.com --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/retailer4/ca-cert.pem"
  { set +x; } 2>/dev/null

  # Copy the tls CA cert, server cert, server keystore to well known file names in the peer's tls directory that are referenced by peer startup config
  cp "${PWD}/organizations/peerOrganizations/retailer4.beefsupply.com/peers/peer0.retailer4.beefsupply.com/tls/tlscacerts/"* "${PWD}/organizations/peerOrganizations/retailer4.beefsupply.com/peers/peer0.retailer4.beefsupply.com/tls/ca.crt"
  cp "${PWD}/organizations/peerOrganizations/retailer4.beefsupply.com/peers/peer0.retailer4.beefsupply.com/tls/signcerts/"* "${PWD}/organizations/peerOrganizations/retailer4.beefsupply.com/peers/peer0.retailer4.beefsupply.com/tls/server.crt"
  cp "${PWD}/organizations/peerOrganizations/retailer4.beefsupply.com/peers/peer0.retailer4.beefsupply.com/tls/keystore/"* "${PWD}/organizations/peerOrganizations/retailer4.beefsupply.com/peers/peer0.retailer4.beefsupply.com/tls/server.key"

  infoln "Generating the user msp"
  set -x
  fabric-ca-client enroll -u https://user1:user1pw@localhost:25054 --caname ca-retailer4 -M "${PWD}/organizations/peerOrganizations/retailer4.beefsupply.com/users/User1@retailer4.beefsupply.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/retailer4/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/retailer4.beefsupply.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/retailer4.beefsupply.com/users/User1@retailer4.beefsupply.com/msp/config.yaml"

  infoln "Generating the org admin msp"
  set -x
  fabric-ca-client enroll -u https://retailer4admin:retailer4adminpw@localhost:25054 --caname ca-retailer4 -M "${PWD}/organizations/peerOrganizations/retailer4.beefsupply.com/users/Admin@retailer4.beefsupply.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/retailer4/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/retailer4.beefsupply.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/retailer4.beefsupply.com/users/Admin@retailer4.beefsupply.com/msp/config.yaml"
}




function createConsumer() {
  infoln "Enrolling the CA admin"
  mkdir -p organizations/peerOrganizations/consumer.beefsupply.com/

  export FABRIC_CA_CLIENT_HOME=${PWD}/organizations/peerOrganizations/consumer.beefsupply.com/

  set -x
  fabric-ca-client enroll -u https://admin:adminpw@localhost:26054 --caname ca-consumer --tls.certfiles "${PWD}/organizations/fabric-ca/consumer/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo 'NodeOUs:
  Enable: true
  ClientOUIdentifier:
    Certificate: cacerts/localhost-26054-ca-consumer.pem
    OrganizationalUnitIdentifier: client
  PeerOUIdentifier:
    Certificate: cacerts/localhost-26054-ca-consumer.pem
    OrganizationalUnitIdentifier: peer
  AdminOUIdentifier:
    Certificate: cacerts/localhost-26054-ca-distributor1.pem
    OrganizationalUnitIdentifier: admin
  OrdererOUIdentifier:
    Certificate: cacerts/localhost-26054-ca-consumer.pem
    OrganizationalUnitIdentifier: orderer' > "${PWD}/organizations/peerOrganizations/consumer.beefsupply.com/msp/config.yaml"


  mkdir -p "${PWD}/organizations/peerOrganizations/consumer.beefsupply.com/msp/tlscacerts"
  cp "${PWD}/organizations/fabric-ca/consumer/ca-cert.pem" "${PWD}/organizations/peerOrganizations/consumer.beefsupply.com/msp/tlscacerts/ca.crt"

 
  mkdir -p "${PWD}/organizations/peerOrganizations/consumer.beefsupply.com/tlsca"
  cp "${PWD}/organizations/fabric-ca/consumer/ca-cert.pem" "${PWD}/organizations/peerOrganizations/consumer.beefsupply.com/tlsca/tlsca.consumer.beefsupply.com-cert.pem"

  
  mkdir -p "${PWD}/organizations/peerOrganizations/consumer.beefsupply.com/ca"
  cp "${PWD}/organizations/fabric-ca/consumer/ca-cert.pem" "${PWD}/organizations/peerOrganizations/consumer.beefsupply.com/ca/ca.consumer.beefsupply.com-cert.pem"

  infoln "Registering peer0"
  set -x
  fabric-ca-client register --caname ca-consumer --id.name peer0 --id.secret peer0pw --id.type peer --tls.certfiles "${PWD}/organizations/fabric-ca/consumer/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Registering user"
  set -x
  fabric-ca-client register --caname ca-consumer --id.name user1 --id.secret user1pw --id.type client --tls.certfiles "${PWD}/organizations/fabric-ca/consumer/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Registering the org admin"
  set -x
  fabric-ca-client register --caname ca-consumer --id.name consumeradmin --id.secret consumeradminpw --id.type admin --tls.certfiles "${PWD}/organizations/fabric-ca/consumer/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Generating the peer0 msp"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:26054 --caname ca-consumer -M "${PWD}/organizations/peerOrganizations/consumer.beefsupply.com/peers/peer0.consumer.beefsupply.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/consumer/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/consumer.beefsupply.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/consumer.beefsupply.com/peers/peer0.consumer.beefsupply.com/msp/config.yaml"

  infoln "Generating the peer0-tls certificates, use --csr.hosts to specify Subject Alternative Names"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:26054 --caname ca-consumer -M "${PWD}/organizations/peerOrganizations/consumer.beefsupply.com/peers/peer0.consumer.beefsupply.com/tls" --enrollment.profile tls --csr.hosts peer0.consumer.beefsupply.com --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/consumer/ca-cert.pem"
  { set +x; } 2>/dev/null

  # Copy the tls CA cert, server cert, server keystore to well known file names in the peer's tls directory that are referenced by peer startup config
  cp "${PWD}/organizations/peerOrganizations/consumer.beefsupply.com/peers/peer0.consumer.beefsupply.com/tls/tlscacerts/"* "${PWD}/organizations/peerOrganizations/consumer.beefsupply.com/peers/peer0.consumer.beefsupply.com/tls/ca.crt"
  cp "${PWD}/organizations/peerOrganizations/consumer.beefsupply.com/peers/peer0.consumer.beefsupply.com/tls/signcerts/"* "${PWD}/organizations/peerOrganizations/consumer.beefsupply.com/peers/peer0.consumer.beefsupply.com/tls/server.crt"
  cp "${PWD}/organizations/peerOrganizations/consumer.beefsupply.com/peers/peer0.consumer.beefsupply.com/tls/keystore/"* "${PWD}/organizations/peerOrganizations/consumer.beefsupply.com/peers/peer0.consumer.beefsupply.com/tls/server.key"

  infoln "Generating the user msp"
  set -x
  fabric-ca-client enroll -u https://user1:user1pw@localhost:26054 --caname ca-consumer -M "${PWD}/organizations/peerOrganizations/consumer.beefsupply.com/users/User1@consumer.beefsupply.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/consumer/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/consumer.beefsupply.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/consumer.beefsupply.com/users/User1@consumer.beefsupply.com/msp/config.yaml"

  infoln "Generating the org admin msp"
  set -x
  fabric-ca-client enroll -u https://consumeradmin:consumeradminpw@localhost:26054 --caname ca-consumer -M "${PWD}/organizations/peerOrganizations/consumer.beefsupply.com/users/Admin@consumer.beefsupply.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/consumer/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/consumer.beefsupply.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/consumer.beefsupply.com/users/Admin@consumer.beefsupply.com/msp/config.yaml"
}


























