version: '2.4' 

networks:
  farmer:  
    name:  farmer
    driver: bridge

    
services:
  cassandra1:
    image: cassandra:latest
    #image docker.io/bitnami/cassandra:latest
    restart: on-failure
    container_name: cassandra1
    hostname: cassandra1
    #mem_limit: 2g  
    healthcheck:
        #test: ["CMD", "cqlsh", "-e", "describe keyspaces" ]
        test: ["CMD", "nodetool", "status"]
        #test: ["CMD-SHELL", "[ $$(nodetool statusgossip) = running ]"]
        #test [ "CMD", "/opt/bitnami/cassandra/bin/cqlsh", "-u cassandra", "-p cassandra" ,"-e \"describe keyspaces\"" ]
        interval: 10s
        start_period: 10s
        timeout: 10s
        retries: 5
    networks:
      - farmer
    #entrypoint /usr/local/bin/docker-entrypoint.sh
   #command /usr/local/bin/docker-entrypoint.sh
    ports:
      - "7001:7000"
      - "9032:9042"  # Expose native binary CQL port for your apps
    volumes:
      - ./data/cassandra1:/var/lib/cassandra/data    
      #- ./etc/cassandra1:/etc/cassandra  
      #- ./entry_point/cassandra1/docker-entrypoint.sh:/usr/local/bin/docker-entrypoint.sh
      - ./commitlog/cassandra1:/var/lib/cassandra/commitlog
      #- ./hints/cassandra1:/var/lib/cassandra/hints
      - ./saved_caches/cassandra1:/var/lib/cassandra/saved_caches
      #- ./logs/cassandra1:/var/log/cassandra
    environment: &environment    # Declare and save environments variables into "environment"
        CASSANDRA_SEEDS: "cassandra1"    # The first node will be seed
        CASSANDRA_CLUSTER_NAME: FarmerCassandraDB     
        CASSANDRA_DC: dc1
        CASSANDRA_RACK: rack1
        CASSANDRA_ENDPOINT_SNITCH: GossipingPropertyFileSnitch
        #CASSANDRA_ENDPOINT_SNITCH: SimpleSnitch
        CASSANDRA_NUM_TOKENS: 128
        #CASSANDRA_PASSWORD_SEEDER: 1
        CASSANDRA_PASSWORD: cassandra
        MAX_HEAP_SIZE: 1024M
        HEAP_NEWSIZE: 200M
        #CASSANDRA_BROADCAST_ADDRESS: 0.0.0.0
        #CASSANDRA_LISTEN_ADDRESS: auto
        #CASSANDRA_RPC_ADDRESS: 0.0.0.0
        #CASSANDRA_BROADCAST_RPC_ADDRESS: 127.0.0.30
        #CASSANDRA_START_RPC: 1
        #- CASSANDRA_ENABLE_USER_DEFINED_FUNCTIONS=1
  cassandra2:
    image: cassandra:latest
    container_name: cassandra2
    restart: on-failure
    hostname: cassandra2
    #mem_limit: 2g
    healthcheck:
        #test: ["CMD", "cqlsh", "-e", "describe keyspaces" ]
        test: ["CMD", "nodetool", "status"]
        #test: ["CMD-SHELL", "[ $$(nodetool statusgossip) = running ]"]
        interval: 10s
        start_period: 10s
        timeout: 10s
        retries: 5
    networks:
      - farmer
    ports:
      #- "7002:7000"
      - "9033:9032" 
    volumes:
      - ./data/cassandra2:/var/lib/cassandra/data    
      #- ./etc/cassandra2:/etc/cassandra 
      #- ./entry_point/cassandra1/docker-entrypoint.sh:/usr/local/bin/docker-entrypoint.sh
      - ./commitlog/cassandra2:/var/lib/cassandra/commitlog
      #- ./hints/cassandra1:/var/lib/cassandra/hints
      - ./saved_caches/cassandra2:/var/lib/cassandra/saved_caches
      #- ./logs/cassandra1:/var/log/cassandra
    environment: *environment   # point to "environment" to use the same environment variables as cassandra1 
    depends_on: 
      - cassandra1
      #cassandra1:    
       # condition: service_healthy
  cassandra3:
    image: cassandra:latest
    container_name: cassandra3
    restart: on-failure
    hostname: cassandra3
    #mem_limit: 2g
    healthcheck:
        #test: ["CMD", "cqlsh", "-e", "describe keyspaces" ]
        test: ["CMD", "nodetool", "status"]
        #test: ["CMD-SHELL", "[ $$(nodetool statusgossip) = running ]"]
        interval: 10s
        start_period: 10s
        timeout: 10s
        retries: 5
    networks:
      - farmer
    ports:
      #- "7003:7000"
      - "9034:9032"  
    volumes:
      - ./data/cassandra3:/var/lib/cassandra/data   
      #- ./etc/cassandra3:/etc/cassandra  
      #- ./entry_point/cassandra1/docker-entrypoint.sh:/usr/local/bin/docker-entrypoint.sh
      - ./commitlog/cassandra3:/var/lib/cassandra/commitlog
      #- ./hints/cassandra1:/var/lib/cassandra/hints
      - ./saved_caches/cassandra3:/var/lib/cassandra/saved_caches
      #- ./logs/cassandra1:/var/log/cassandra  
    environment: *environment   
    depends_on: 
      - cassandra2
      #cassandra2:   
        #condition: service_healthy # cass3 only after cass2
